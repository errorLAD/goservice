[{"/home/abhi/mainfile/jobpotal/job-portal/frontend/src/index.js":"1","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/App.js":"2","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/reportWebVitals.js":"3","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Welcome.js":"4","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Logout.js":"5","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Navbar.js":"6","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Login.js":"7","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Signup.js":"8","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Home.js":"9","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Applications.js":"10","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Profile.js":"11","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/recruiter/CreateJobs.js":"12","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/recruiter/JobApplications.js":"13","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/recruiter/AcceptedApplicants.js":"14","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/recruiter/Profile.js":"15","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/recruiter/MyJobs.js":"16","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/lib/isAuth.js":"17","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/lib/MessagePopup.js":"18","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/lib/PasswordInput.js":"19","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/lib/apiList.js":"20","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/lib/EmailInput.js":"21","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/lib/FileUploadInput.js":"22","/home/abhi/goservices/stage2/job-portal/frontend/src/index.js":"23","/home/abhi/goservices/stage2/job-portal/frontend/src/App.js":"24","/home/abhi/goservices/stage2/job-portal/frontend/src/reportWebVitals.js":"25","/home/abhi/goservices/stage2/job-portal/frontend/src/component/Navbar.js":"26","/home/abhi/goservices/stage2/job-portal/frontend/src/component/Applications.js":"27","/home/abhi/goservices/stage2/job-portal/frontend/src/component/Profile.js":"28","/home/abhi/goservices/stage2/job-portal/frontend/src/component/Login.js":"29","/home/abhi/goservices/stage2/job-portal/frontend/src/component/Welcome.js":"30","/home/abhi/goservices/stage2/job-portal/frontend/src/component/Home.js":"31","/home/abhi/goservices/stage2/job-portal/frontend/src/component/Logout.js":"32","/home/abhi/goservices/stage2/job-portal/frontend/src/component/recruiter/JobApplications.js":"33","/home/abhi/goservices/stage2/job-portal/frontend/src/component/recruiter/MyJobs.js":"34","/home/abhi/goservices/stage2/job-portal/frontend/src/component/recruiter/AcceptedApplicants.js":"35","/home/abhi/goservices/stage2/job-portal/frontend/src/component/recruiter/Profile.js":"36","/home/abhi/goservices/stage2/job-portal/frontend/src/component/recruiter/CreateJobs.js":"37","/home/abhi/goservices/stage2/job-portal/frontend/src/lib/isAuth.js":"38","/home/abhi/goservices/stage2/job-portal/frontend/src/component/Signup.js":"39","/home/abhi/goservices/stage2/job-portal/frontend/src/lib/MessagePopup.js":"40","/home/abhi/goservices/stage2/job-portal/frontend/src/lib/apiList.js":"41","/home/abhi/goservices/stage2/job-portal/frontend/src/lib/FileUploadInput.js":"42","/home/abhi/goservices/stage2/job-portal/frontend/src/lib/PasswordInput.js":"43","/home/abhi/goservices/stage2/job-portal/frontend/src/lib/EmailInput.js":"44","/home/abhi/goservices/stage2/job-portal/frontend/src/component/MobileHome.js":"45","/home/abhi/goservices/stage3/frontend/src/index.js":"46","/home/abhi/goservices/stage3/frontend/src/reportWebVitals.js":"47","/home/abhi/goservices/stage3/frontend/src/App.js":"48","/home/abhi/goservices/stage3/frontend/src/component/Login.js":"49","/home/abhi/goservices/stage3/frontend/src/component/Navbar.js":"50","/home/abhi/goservices/stage3/frontend/src/component/Logout.js":"51","/home/abhi/goservices/stage3/frontend/src/component/Welcome.js":"52","/home/abhi/goservices/stage3/frontend/src/component/Applications.js":"53","/home/abhi/goservices/stage3/frontend/src/component/Profile.js":"54","/home/abhi/goservices/stage3/frontend/src/component/Home.js":"55","/home/abhi/goservices/stage3/frontend/src/component/Signup.js":"56","/home/abhi/goservices/stage3/frontend/src/component/recruiter/MyJobs.js":"57","/home/abhi/goservices/stage3/frontend/src/component/recruiter/CreateJobs.js":"58","/home/abhi/goservices/stage3/frontend/src/component/recruiter/JobApplications.js":"59","/home/abhi/goservices/stage3/frontend/src/lib/MessagePopup.js":"60","/home/abhi/goservices/stage3/frontend/src/component/recruiter/AcceptedApplicants.js":"61","/home/abhi/goservices/stage3/frontend/src/component/recruiter/Profile.js":"62","/home/abhi/goservices/stage3/frontend/src/lib/isAuth.js":"63","/home/abhi/goservices/stage3/frontend/src/lib/EmailInput.js":"64","/home/abhi/goservices/stage3/frontend/src/lib/PasswordInput.js":"65","/home/abhi/goservices/stage3/frontend/src/lib/apiList.js":"66","/home/abhi/goservices/stage3/frontend/src/lib/FileUploadInput.js":"67","/home/abhi/goservices/stage3/frontend/src/component/MobileHome.js":"68","/home/abhi/goservices/stage4/server/client/src/index.js":"69","/home/abhi/goservices/stage4/server/client/src/reportWebVitals.js":"70","/home/abhi/goservices/stage4/server/client/src/App.js":"71","/home/abhi/goservices/stage4/server/client/src/component/Login.js":"72","/home/abhi/goservices/stage4/server/client/src/component/Logout.js":"73","/home/abhi/goservices/stage4/server/client/src/component/Signup.js":"74","/home/abhi/goservices/stage4/server/client/src/component/Navbar.js":"75","/home/abhi/goservices/stage4/server/client/src/component/recruiter/CreateJobs.js":"76","/home/abhi/goservices/stage4/server/client/src/component/Welcome.js":"77","/home/abhi/goservices/stage4/server/client/src/component/recruiter/JobApplications.js":"78","/home/abhi/goservices/stage4/server/client/src/component/Applications.js":"79","/home/abhi/goservices/stage4/server/client/src/component/Profile.js":"80","/home/abhi/goservices/stage4/server/client/src/component/recruiter/MyJobs.js":"81","/home/abhi/goservices/stage4/server/client/src/component/Home.js":"82","/home/abhi/goservices/stage4/server/client/src/lib/isAuth.js":"83","/home/abhi/goservices/stage4/server/client/src/lib/MessagePopup.js":"84","/home/abhi/goservices/stage4/server/client/src/component/recruiter/Profile.js":"85","/home/abhi/goservices/stage4/server/client/src/component/recruiter/AcceptedApplicants.js":"86","/home/abhi/goservices/stage4/server/client/src/lib/EmailInput.js":"87","/home/abhi/goservices/stage4/server/client/src/lib/PasswordInput.js":"88","/home/abhi/goservices/stage4/server/client/src/lib/apiList.js":"89","/home/abhi/goservices/stage4/server/client/src/lib/FileUploadInput.js":"90","/home/abhi/goservices/stage4/server/client/src/component/MobileHome.js":"91"},{"size":500,"mtime":1651648525944,"results":"92","hashOfConfig":"93"},{"size":3291,"mtime":1651735179979,"results":"94","hashOfConfig":"93"},{"size":362,"mtime":1651648525944,"results":"95","hashOfConfig":"93"},{"size":9849,"mtime":1651733954729,"results":"96","hashOfConfig":"93"},{"size":489,"mtime":1651648525944,"results":"97","hashOfConfig":"93"},{"size":6474,"mtime":1651740143786,"results":"98","hashOfConfig":"93"},{"size":4000,"mtime":1651734999400,"results":"99","hashOfConfig":"93"},{"size":12416,"mtime":1651735127802,"results":"100","hashOfConfig":"93"},{"size":27388,"mtime":1651739876566,"results":"101","hashOfConfig":"93"},{"size":7744,"mtime":1651740031096,"results":"102","hashOfConfig":"93"},{"size":7641,"mtime":1651664433219,"results":"103","hashOfConfig":"93"},{"size":14189,"mtime":1651740647278,"results":"104","hashOfConfig":"93"},{"size":20661,"mtime":1651741656340,"results":"105","hashOfConfig":"93"},{"size":23092,"mtime":1651741656340,"results":"106","hashOfConfig":"93"},{"size":5554,"mtime":1651741656240,"results":"107","hashOfConfig":"93"},{"size":25726,"mtime":1651741656340,"results":"108","hashOfConfig":"93"},{"size":165,"mtime":1651648525944,"results":"109","hashOfConfig":"93"},{"size":503,"mtime":1651648525944,"results":"110","hashOfConfig":"93"},{"size":1666,"mtime":1651648525944,"results":"111","hashOfConfig":"93"},{"size":437,"mtime":1651648525944,"results":"112","hashOfConfig":"93"},{"size":1167,"mtime":1651648525944,"results":"113","hashOfConfig":"93"},{"size":3059,"mtime":1651654121542,"results":"114","hashOfConfig":"93"},{"size":500,"mtime":1651648525944,"results":"115","hashOfConfig":"116"},{"size":3291,"mtime":1651735179979,"results":"117","hashOfConfig":"116"},{"size":362,"mtime":1651648525944,"results":"118","hashOfConfig":"116"},{"size":12413,"mtime":1653306383750,"results":"119","hashOfConfig":"116"},{"size":7819,"mtime":1653469092742,"results":"120","hashOfConfig":"116"},{"size":7641,"mtime":1651664433219,"results":"121","hashOfConfig":"116"},{"size":5445,"mtime":1653472980841,"results":"122","hashOfConfig":"116"},{"size":17021,"mtime":1653478599944,"results":"123","hashOfConfig":"116"},{"size":37299,"mtime":1653407704575,"results":"124","hashOfConfig":"116"},{"size":489,"mtime":1651648525944,"results":"125","hashOfConfig":"116"},{"size":20704,"mtime":1653478068049,"results":"126","hashOfConfig":"116"},{"size":26341,"mtime":1653476951366,"results":"127","hashOfConfig":"116"},{"size":23130,"mtime":1653477325288,"results":"128","hashOfConfig":"116"},{"size":5612,"mtime":1653477111938,"results":"129","hashOfConfig":"116"},{"size":19555,"mtime":1653475687939,"results":"130","hashOfConfig":"116"},{"size":165,"mtime":1651648525944,"results":"131","hashOfConfig":"116"},{"size":17894,"mtime":1653474417968,"results":"132","hashOfConfig":"116"},{"size":503,"mtime":1651648525944,"results":"133","hashOfConfig":"116"},{"size":437,"mtime":1651648525944,"results":"134","hashOfConfig":"116"},{"size":3059,"mtime":1651654121542,"results":"135","hashOfConfig":"116"},{"size":1666,"mtime":1651648525944,"results":"136","hashOfConfig":"116"},{"size":1167,"mtime":1651648525944,"results":"137","hashOfConfig":"116"},{"size":904,"mtime":1653402071612,"results":"138","hashOfConfig":"116"},{"size":500,"mtime":1651648525944,"results":"139","hashOfConfig":"140"},{"size":362,"mtime":1651648525944,"results":"141","hashOfConfig":"140"},{"size":3291,"mtime":1651735179979,"results":"142","hashOfConfig":"140"},{"size":5445,"mtime":1653472980841,"results":"143","hashOfConfig":"140"},{"size":12408,"mtime":1653563579698,"results":"144","hashOfConfig":"140"},{"size":489,"mtime":1651648525944,"results":"145","hashOfConfig":"140"},{"size":16834,"mtime":1653564901440,"results":"146","hashOfConfig":"140"},{"size":7819,"mtime":1653469092742,"results":"147","hashOfConfig":"140"},{"size":7641,"mtime":1651664433219,"results":"148","hashOfConfig":"140"},{"size":37299,"mtime":1653552445153,"results":"149","hashOfConfig":"140"},{"size":17894,"mtime":1653474417968,"results":"150","hashOfConfig":"140"},{"size":26341,"mtime":1653476951366,"results":"151","hashOfConfig":"140"},{"size":16282,"mtime":1653564711350,"results":"152","hashOfConfig":"140"},{"size":20704,"mtime":1653478068049,"results":"153","hashOfConfig":"140"},{"size":503,"mtime":1651648525944,"results":"154","hashOfConfig":"140"},{"size":23130,"mtime":1653477325288,"results":"155","hashOfConfig":"140"},{"size":5612,"mtime":1653477111938,"results":"156","hashOfConfig":"140"},{"size":165,"mtime":1651648525944,"results":"157","hashOfConfig":"140"},{"size":1167,"mtime":1651648525944,"results":"158","hashOfConfig":"140"},{"size":1666,"mtime":1651648525944,"results":"159","hashOfConfig":"140"},{"size":437,"mtime":1651648525944,"results":"160","hashOfConfig":"140"},{"size":3059,"mtime":1651654121542,"results":"161","hashOfConfig":"140"},{"size":904,"mtime":1653402071612,"results":"162","hashOfConfig":"140"},{"size":500,"mtime":1651648525944,"results":"163","hashOfConfig":"164"},{"size":362,"mtime":1651648525944,"results":"165","hashOfConfig":"164"},{"size":3291,"mtime":1651735179979,"results":"166","hashOfConfig":"164"},{"size":5445,"mtime":1653472980841,"results":"167","hashOfConfig":"164"},{"size":489,"mtime":1651648525944,"results":"168","hashOfConfig":"164"},{"size":17894,"mtime":1653474417968,"results":"169","hashOfConfig":"164"},{"size":12408,"mtime":1653563579698,"results":"170","hashOfConfig":"164"},{"size":16282,"mtime":1653564711350,"results":"171","hashOfConfig":"164"},{"size":16834,"mtime":1653564901440,"results":"172","hashOfConfig":"164"},{"size":20704,"mtime":1653478068049,"results":"173","hashOfConfig":"164"},{"size":7819,"mtime":1653469092742,"results":"174","hashOfConfig":"164"},{"size":7641,"mtime":1651664433219,"results":"175","hashOfConfig":"164"},{"size":26341,"mtime":1653476951366,"results":"176","hashOfConfig":"164"},{"size":37299,"mtime":1653552445153,"results":"177","hashOfConfig":"164"},{"size":165,"mtime":1651648525944,"results":"178","hashOfConfig":"164"},{"size":503,"mtime":1651648525944,"results":"179","hashOfConfig":"164"},{"size":5612,"mtime":1653477111938,"results":"180","hashOfConfig":"164"},{"size":23130,"mtime":1653477325288,"results":"181","hashOfConfig":"164"},{"size":1167,"mtime":1651648525944,"results":"182","hashOfConfig":"164"},{"size":1666,"mtime":1651648525944,"results":"183","hashOfConfig":"164"},{"size":437,"mtime":1651648525944,"results":"184","hashOfConfig":"164"},{"size":3059,"mtime":1651654121542,"results":"185","hashOfConfig":"164"},{"size":904,"mtime":1653402071612,"results":"186","hashOfConfig":"164"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},"157pbgy",{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"189"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"189"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"189"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"189"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"189"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"189"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"189"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"189"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"189"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"189"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"189"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"189"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"189"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"189"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"189"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},"2c8jj0",{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"250"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"250"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"250"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"250"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"250"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"250"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},"1tg2wra",{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"299"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"299"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"299"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"299"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"299"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"299"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"299"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"299"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"299"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"299"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"299"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"299"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vo8b5t",{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/abhi/mainfile/jobpotal/job-portal/frontend/src/index.js",[],["397","398"],"/home/abhi/mainfile/jobpotal/job-portal/frontend/src/App.js",["399"],"\n  \nimport { createContext, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport Welcome from \"./component/Welcome\";\nimport Navbar from \"./component/Navbar\";\nimport Login from \"./component/Login\";\nimport Logout from \"./component/Logout\";\nimport Signup from \"./component/Signup\";\nimport Home from \"./component/Home\";\nimport Applications from \"./component/Applications\";\nimport Profile from \"./component/Profile\";\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\nimport MyJobs from \"./component/recruiter/MyJobs\";\nimport JobApplications from \"./component/recruiter/JobApplications\";\nimport AcceptedApplicants from \"./component/recruiter/AcceptedApplicants\";\nimport RecruiterProfile from \"./component/recruiter/Profile\";\nimport MessagePopup from \"./lib/MessagePopup\";\nimport isAuth, { userType } from \"./lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"98vh\",\n    paddingTop: \"64px\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n}));\n\nexport const SetPopupContext = createContext();\n\nfunction App() {\n  const classes = useStyles();\n  const [popup, setPopup] = useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n  return (\n    <BrowserRouter>\n      <SetPopupContext.Provider value={setPopup}>\n        <Grid container direction=\"column\">\n          <Grid item xs>\n            <Navbar />\n          </Grid>\n          <Grid item className={classes.body}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Welcome />\n              </Route>\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route exact path=\"/signup\">\n                <Signup />\n              </Route>\n              <Route exact path=\"/logout\">\n                <Logout />\n              </Route>\n              <Route exact path=\"/home\">\n                <Home />\n              </Route>\n              <Route exact path=\"/applications\">\n                <Applications />\n              </Route>\n              <Route exact path=\"/profile\">\n                {userType() === \"recruiter\" ? (\n                  <RecruiterProfile />\n                ) : (\n                  <Profile />\n                )}\n              </Route>\n              <Route exact path=\"/addjob\">\n                <CreateJobs />\n              </Route>\n              <Route exact path=\"/myjobs\">\n                <MyJobs />\n              </Route>\n              <Route exact path=\"/job/applications/:jobId\">\n                <JobApplications />\n              </Route>\n              <Route exact path=\"/employees\">\n                <AcceptedApplicants />\n              </Route>\n              <Route>\n\n              </Route>\n            </Switch>\n          </Grid>\n        </Grid>\n        <MessagePopup\n          open={popup.open}\n          setOpen={(status) =>\n            setPopup({\n              ...popup,\n              open: status,\n            })\n          }\n          severity={popup.severity}\n          message={popup.message}\n        />\n      </SetPopupContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/reportWebVitals.js",[],"/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Welcome.js",["400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426"],"import { Grid, Typography } from \"@material-ui/core\";\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nconst Welcome = (props) => {\n  const settings = {\n    dots: false,\n    autoplay: true,\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n   <>\n   \n   <div class=\"hidden md:block\"> \n  <div class=\"max-w-7xl\">\n  <div class= \"px\">\n\n\n  <div class=\"max-w-6xl\">\n  <div class=\"grid grid-cols-2 gap-4\">\n\n  <div> \n    <div class=\" mx-auto py-16 px-4\">\n    <h2 class=\" font-extrabold  text-black sm:text-5xl font-serif\">\n      <span class=\"\">\n    <span class=\" font-serif\">  Find  The \n    \n     </span>\n       <Slider {...settings}>\n   \n            <p class=\"text-red-900 font-serif\">ARCHITECT</p>\n            <p class=\"text-indigo-900 font-serif\">CONTRACTOR</p>\n            <p class=\"text-indigo-900 font-serif\">WORKER</p>\n            <p class=\"text-indigo-900 font-serif\">MISTRI</p>\n            <p class=\"text-indigo-900 font-serif\">TOOL</p>\n            <p class=\"text-indigo-900 font-serif\">PLUMBER</p>\n            <p class=\"text-indigo-900 font-serif\">ELECTRICAN</p>\n       </Slider>\n         Nearest Your Location\n         <img class=\" h-10 w-20\" src=\"https://imgur.com/ux9PKcU.png\" alt=\"Woman's Face\"/>\n       </span>\n\n    </h2>\n  </div>\n  </div>\n  <div>\n  <div class=\" mx-auto py-8\">\n    <span class=\"shadow-3xl rounded-lg \">\n    <Slider {...settings}>\n       <div class=\"box\">\n       <img src=\"https://imgur.com/iUclZ1o.png\" class=\"object-cover h-58 w-116 ...\"/>\n       </div>\n\n       <div class=\"box\">\n       <img src=\"https://imgur.com/3S74saY.png\" class=\"object-cover h-58 w-116 ...\"/>\n       </div>\n\n       <div class=\"box\">\n       <img src=\"https://imgur.com/qXQ9qy7.png\" class=\"object-cover h-58 w-116 ...\"/>\n       </div>\n\n       <div class=\"box\">\n       <img src=\"https://imgur.com/Q2BpkdX.png\" class=\"object-cover h-58 w-116 ...\"/>\n       </div>\n\n\n       <div class=\"box\">\n       <img src=\"https://imgur.com/JJupn2R.png\" class=\"object-cover h-58 w-116 ...\"/>\n       </div>\n\n       <div class=\"box\">\n       <img src=\"https://imgur.com/Cm6Zi7f.png\" class=\"object-cover h-58 w-116 ...\"/>\n       </div>\n       <div class=\"box\">\n       <img src=\"https://imgur.com/oPUOzNy.png\" class=\"object-cover h-58 w-116 ...\"/>\n       </div>\n\n    </Slider>\n    </span>\n    </div>\n    </div> \n    </div>\n  </div>\n  </div>\n  </div>\n\n\n\n  <div class=\"py-12 bg-white\">\n <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n    <div class=\"lg:text-center\">\n      <h2 class=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\">let us help</h2>\n      <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Our Services</p>\n      <p class=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">Choose from our wide range of  services</p>\n    </div>    \n  </div>\n  <div class=\"max-w-2xl mx-auto px-4 sm:px-6 lg:px-8\">\n    <div class=\"lg:text-center\">\n    <div class=\"columns\">\n  <div class=\"column\">\n  <div class=\"max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\">\n    <a href=\"#\">\n        <img class=\"rounded-t-lg\" src=\"https://imgur.com/jd2wlSA.png\" alt=\"\" />\n    </a>\n    <div class=\"p-3\">\n        <a href=\"#\">\n            <h6 class=\"text-l font-bold tracking-tight text-gray-900 dark:text-white\">Architect</h6>\n        </a>\n           <div class=\"mb-2\">\n         <small>Find The Top Architect</small>\n          </div>\n          <button type=\"button\" class=\"text-dark bg-indigo-100 dark:bg-dark cursor-not-allowed font-medium rounded-lg text-sm px-4 py-2 \" disabled><small>LogIn to Find</small></button>\n    </div>\n</div>\n  </div>\n\n  <div class=\"column\">\n    <div class=\"max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\">\n    <a href=\"#\">\n        <img class=\"rounded-t-lg\" src=\"https://imgur.com/DqxH1RF.png\" alt=\"\" />\n    </a>\n    <div class=\"p-3\">\n        <a href=\"#\">\n            <h6 class=\"text-l font-bold tracking-tight text-gray-900 dark:text-white\">Architect Farm</h6>\n        </a>\n        <p class=\"mb-2 font-normal text-gray-700 dark:text-gray-400\">\n          <small>Find Architect Farm</small></p>\n          <button type=\"button\" class=\"text-dark bg-indigo-100 dark:bg-dark cursor-not-allowed font-medium rounded-lg text-sm px-4 py-2 \" disabled><small>LogIn to Find</small></button>\n   \n    </div>\n</div>  \n  </div>\n  \n  <div class=\"column\">\n  <div class=\"max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\">\n    <a href=\"#\">\n        <img class=\"rounded-t-lg\" src=\"https://imgur.com/MU36Mo8.png\" alt=\"\" />\n    </a>\n    <div class=\"p-3\">\n        <a href=\"#\">\n            <h6 class=\"text-l font-bold tracking-tight text-gray-900 dark:text-white\">Interior Design</h6>\n        </a>\n        <p class=\"mb-2 font-normal text-gray-700 dark:text-gray-400\">\n          <small>Find Interior Design </small></p>\n          <button type=\"button\" class=\"text-dark bg-indigo-100 dark:bg-dark cursor-not-allowed font-medium rounded-lg text-sm px-4 py-2 \" disabled><small>LogIn to Find</small></button>\n   \n    </div>\n</div>\n  </div>\n  \n  <div class=\"column\">\n  <div class=\"max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\">\n    <a href=\"#\">\n        <img class=\"rounded-t-lg\" src=\"https://imgur.com/HGq9YYF.png\" alt=\"\" />\n    </a>\n    <div class=\"p-3\">\n        <a href=\"#\">\n            <h6 class=\"text-l font-bold tracking-tight text-gray-900 dark:text-white\">Exterior Design</h6>\n        </a>\n        <p class=\"mb-2 font-normal text-gray-700 dark:text-gray-400\">\n          <small>Find Interior Design</small></p>\n          <button type=\"button\" class=\"text-dark bg-indigo-100 dark:bg-dark cursor-not-allowed font-medium rounded-lg text-sm px-4 py-2 \" disabled><small>LogIn to Find</small></button>\n   \n    </div>\n</div>\n  </div>\n</div>\n    </div>\n</div>\n<div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n    <div class=\"lg:text-center\">\n    <div class=\"columns\">\n  <div class=\"column\">\n  <div class=\"max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\">\n    <a href=\"#\">\n        <img class=\"rounded-t-lg\" src=\"https://imgur.com/HugToAZ.png\" alt=\"\" />\n    </a>\n    <div class=\"p-3\">\n        <a href=\"#\">\n            <h6 class=\"text-l font-bold tracking-tight text-gray-900 dark:text-white\">Contractor</h6>\n        </a>\n           <div class=\"mb-2\">\n         <small>Find The Top Contractor</small>\n          </div>\n          <button type=\"button\" class=\"text-dark bg-indigo-100 dark:bg-dark cursor-not-allowed font-medium rounded-lg text-sm px-4 py-2 \" disabled><small>LogIn to Find</small></button>\n    </div>\n</div>\n  </div>\n  <div class=\"column\">\n  <div class=\"max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\">\n    <a href=\"#\">\n        <img class=\"rounded-t-lg\" src=\"https://imgur.com/9diADla.png\" alt=\"\" />\n    </a>\n    <div class=\"p-3\">\n        <a href=\"#\">\n            <h6 class=\"text-l font-bold tracking-tight text-gray-900 dark:text-white\">Worker | Helper</h6>\n        </a>\n           <div class=\"mb-2\">\n         <small>Find The worker & helper</small>\n          </div>\n          <button type=\"button\" class=\"text-dark bg-indigo-100 dark:bg-dark cursor-not-allowed font-medium rounded-lg text-sm px-4 py-2 \" disabled><small>LogIn to Find</small></button>\n    </div>\n</div>\n  </div>\n\n  <div class=\"column\">\n    <div class=\"max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\">\n    <a href=\"#\">\n        <img class=\"rounded-t-lg\" src=\"https://imgur.com/4eSLA4N.png\" alt=\"\" />\n    </a>\n    <div class=\"p-3\">\n        <a href=\"#\">\n            <h6 class=\"text-l font-bold tracking-tight text-gray-900 dark:text-white\">Plumber</h6>\n        </a>\n        <p class=\"mb-2 font-normal text-gray-700 dark:text-gray-400\">\n          <small>Hire the best Plumbers</small></p>\n          <button type=\"button\" class=\"text-dark bg-indigo-100 dark:bg-dark cursor-not-allowed font-medium rounded-lg text-sm px-4 py-2 \" disabled><small>LogIn to Find</small></button>\n   \n    </div>\n</div>  \n  </div>\n  \n  <div class=\"column\">\n  <div class=\"max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\">\n    <a href=\"#\">\n        <img class=\"rounded-t-lg\" src=\"https://imgur.com/OodtDEB.png\" alt=\"\" />\n    </a>\n    <div class=\"p-3\">\n        <a href=\"#\">\n            <h6 class=\"text-l font-bold tracking-tight text-gray-900 dark:text-white\">Tool</h6>\n        </a>\n        <p class=\"mb-2 font-normal text-gray-700 dark:text-gray-400\">\n          <small>Tools List for Construction</small></p>\n          <button type=\"button\" class=\"text-dark bg-indigo-100 dark:bg-dark cursor-not-allowed font-medium rounded-lg text-sm px-4 py-2 \" disabled><small>LogIn to Find</small></button>\n   \n    </div>\n</div>\n  </div>\n  \n  <div class=\"column\">\n  <div class=\"max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\">\n    <a href=\"#\">\n        <img class=\"rounded-t-lg\" src=\"https://imgur.com/WKNRPrf.png\" alt=\"\" />\n    </a>\n    <div class=\"p-3\">\n        <a href=\"#\">\n            <h6 class=\"text-l font-bold tracking-tight text-gray-900 dark:text-white\">Electrician</h6>\n        </a>\n        <p class=\"mb-2 font-normal text-gray-700 dark:text-gray-400\">\n          <small>Best Electricians near you </small></p>\n          <button type=\"button\" class=\"text-dark bg-indigo-100 dark:bg-dark cursor-not-allowed font-medium rounded-lg text-sm px-4 py-2 \" disabled><small>LogIn to Find</small></button>\n   \n    </div>\n</div>\n  </div>\n</div>\n    </div>\n</div>\n\n\n</div>\n\n\n\n   </div>\n   </>\n  );\n};\n\n\nexport default Welcome;\n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Logout.js",["427"],"import { useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { SetPopupContext } from \"../App\";\n\nconst Logout = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"type\");\n    setPopup({\n      open: true,\n      severity: \"success\",\n      message: \"Logged out successfully\",\n    });\n  }, []);\n  return <Redirect to=\"/login\" />;\n};\n\nexport default Logout;\n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Navbar.js",["428","429","430"],"import React, { Component }  from 'react';\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    Button,\n    makeStyles,\n  } from \"@material-ui/core\";\n  import { useHistory } from \"react-router-dom\";\n  import { Link } from \"react-router-dom\";\n//\n  \n  import isAuth, { userType } from \"../lib/isAuth\";\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n  \n  const Navbar = (props) => {\n    const classes = useStyles();\n    let history = useHistory();\n  \n    const handleClick = (location) => {\n      console.log(location);\n      history.push(location);\n    };\n  \n    return (\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n          <Link to=\"/\" className={classes.title}>\n            <span class=\"flex\">\n          <img class=\"h-8 w-auto sm:h-10\" src=\"https://imgur.com/0I2eClR.png\"/>\n           </span>\n           </Link>\n          \n       \n        \n          </Typography>\n          {isAuth() ? (\n            userType() === \"recruiter\" ? (\n              <>\n              <div class=\"py-1\">\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                onClick={() => handleClick(\"/home\")}>\n                Architect\n                </button>\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                 onClick={() => handleClick(\"/addjob\")}>\n                  Add Jobs\n                </button>\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                onClick={() => handleClick(\"/myjobs\")}>\n                  My Jobs\n                </button>\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                onClick={() => handleClick(\"/employees\")}>\n                  Employees\n                </button>\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                onClick={() => handleClick(\"/profile\")}>\n                  Profile\n                </button>\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-red-300 dark:focus:ring-red-800 shadow-lg shadow-red-500/50 dark:shadow-lg dark:shadow-red-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\" \n                \n                onClick={() => handleClick(\"/logout\")}>\n                  Logout\n                </button>\n                </div>\n              </>\n            ) : (\n              <>\n              <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n   \n                onClick={() => handleClick(\"/home\")}>\n                   Services\n                </button>\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n   \n                  onClick={() => handleClick(\"/applications\")}\n                >\n                  Applications\n                </button>\n              \n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-red-300 dark:focus:ring-red-800 shadow-lg shadow-red-500/50 dark:shadow-lg dark:shadow-red-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\" \n                \n                onClick={() => handleClick(\"/logout\")}>\n                  Logout\n                </button>\n                \n              </>\n            )\n          ) : (\n            <>\n            <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 to-pink-500 hover:bg-gradient-to-l focus:ring-4 focus:ring-purple-200 dark:focus:ring-purple-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"onClick={() => handleClick(\"/login\")}>\n                Login\n              </button>\n              \n             <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\" onClick={() => handleClick(\"/signup\")}>\n                Signup\n              </button>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    );\n  };\n  \n  export default Navbar;\n  \n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Login.js",["431","432","433"],"import React, { Component }  from 'react';\nimport { useContext, useState } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nimport Navbar from \"./Navbar\";\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"300px\",\n  },\n  submitButton: {\n    width: \"300px\",\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [loginDetails, setLoginDetails] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      error: false,\n      message: \"\",\n    },\n    password: {\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setLoginDetails({\n      ...loginDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\n      return inputErrorHandler[obj].error;\n    });\n    if (verified) {\n      axios\n        .post(apiList.login, loginDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n        setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      \n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n   <>\n     <Navbar />\n\n\n  <div class=\"py-24 bg-white\">\n  <div class=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n\n  <div class=\"grid grid-cols-2 gap-4\">\n  <div>\n\n  <img class=\"h-48 w-full object-cover md:h-full md:w-60\" src=\"https://imgur.com/ztZzKBe.png\" alt=\"Man looking at item at a store\"/>\n         \n  </div>\n\n  <div>\n    <Paper elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n        <div class=\"\">\n        <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Hello Again</p>\n      <p class=\"l text-gray-500 lg:mx-auto\">Please enter your details</p>\n       </div>\n    </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={loginDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={loginDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleLogin()}\n            className={classes.submitButton}\n          >\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n    </div>\n</div>\n</div>\n</div>\n    </>\n  );\n};\n\nexport default Login;\n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Signup.js",["434","435","436","437","438","439","440","441","442","443","444","445"],"import React, { Component }  from 'react';\nimport { useState, useContext } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nimport Navbar from \"./Navbar\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"400px\",\n  },\n  submitButton: {\n    width: \"400px\",\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n\n\n  return (\n    <>\n    \n      <Grid item>\n   \n      </Grid>\n    </>\n  );\n};\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [signupDetails, setSignupDetails] = useState({\n    type: \"applicant\",\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    skills: [],\n    bio: \"\",\n    gst: \"\",\n    address: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    password: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    name: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setSignupDetails({\n      ...signupDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        required: true,\n        untouched: false,\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n\n\n    let updatedDetails = {\n      ...signupDetails,\n   \n    };\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n \n    }\n  };\n\n  const handleLoginRecruiter = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    let updatedDetails = {\n      ...signupDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    console.log(updatedDetails);\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n   \n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <>\n    <Navbar />\n     \n  <div class=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n    <div class=\"grid grid-cols-2 gap-4\">\n            <div class=\"...\">\n            <img class=\"h-48 w-full object-cover md:h-full md:w-70\" src=\"https://imgur.com/BqUrEXJ.png\" alt=\"Man looking at item at a store\"/>\n            </div>\n            <div class=\"...\">\n    <div elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n        <div class=\"\">\n        <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Hello Again</p>\n      <p class=\"l text-gray-500 lg:mx-auto\">Please enter your details</p>\n       </div>\n        </Grid>\n        <Grid item>\n          <TextField\n            select\n            label=\"Category\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            value={signupDetails.type}\n            onChange={(event) => {\n              handleInput(\"type\", event.target.value);\n            }}\n          >\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            label=\"Name\"\n            value={signupDetails.name}\n            onChange={(event) => handleInput(\"name\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.name.error}\n            helperText={inputErrorHandler.name.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"name\", true, \"Name is required\");\n              } else {\n                handleInputError(\"name\", false, \"\");\n              }\n            }}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={signupDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n            required={true}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={signupDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.password.error}\n            helperText={inputErrorHandler.password.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"password\", true, \"Password is required\");\n              } else {\n                handleInputError(\"password\", false, \"\");\n              }\n            }}\n          />\n        </Grid>\n        {signupDetails.type === \"applicant\" ? (\n          <>\n         \n            <Grid item>\n              <ChipInput\n                className={classes.inputBox}\n                label=\"Skills\"\n                variant=\"outlined\"\n                helperText=\"Press enter to add skills\"\n                onChange={(chips) =>\n                  setSignupDetails({ ...signupDetails, skills: chips })\n                }\n              />\n            </Grid>\n            <Grid item>\n      \n            </Grid>\n            <Grid item>\n       \n            </Grid>\n          </>\n        ) : (\n          <>\n            <Grid item style={{ width: \"100%\" }}>\n              <TextField\n                label=\"Bio (upto 250 words)\"\n                multiline\n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.bio}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 250\n                  ) {\n                    handleInput(\"bio\", event.target.value);\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item style={{ width: \"100%\" }}>\n              <TextField\n                label=\"GST or ADDHAR NUMBER \"\n              \n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.gst}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 16\n                  ) {\n                    handleInput(\"gst\", event.target.value);\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item style={{ width: \"100%\" }}>\n              <TextField\n                label=\"Full Address\"\n              \n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.address}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 16\n                  ) {\n                    handleInput(\"address\", event.target.value);\n                  }\n                }}\n              />\n            </Grid>\n\n\n\n\n            <Grid item>\n              <PhoneInput\n                country={\"in\"}\n                value={phone}\n                onChange={(phone) => setPhone(phone)}\n              />\n            </Grid>\n          \n          </>\n        )}\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              signupDetails.type === \"applicant\"\n                ? handleLogin()\n                : handleLoginRecruiter();\n            }}\n            className={classes.submitButton}\n          >\n            Signup\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n    </div>\n    </div>\n    </div>\n    </>\n  );\n};\n\nexport default Login;\n\n// {/* <Grid item>\n//           <PasswordInput\n//             label=\"Re-enter Password\"\n//             value={signupDetails.tmpPassword}\n//             onChange={(event) => handleInput(\"tmpPassword\", event.target.value)}\n//             className={classes.inputBox}\n//             labelWidth={140}\n//             helperText={inputErrorHandler.tmpPassword.message}\n//             error={inputErrorHandler.tmpPassword.error}\n//             onBlur={(event) => {\n//               if (event.target.value !== signupDetails.password) {\n//                 handleInputError(\n//                   \"tmpPassword\",\n//                   true,\n//                   \"Passwords are not same.\"\n//                 );\n//               }\n//             }}\n//           />\n//         </Grid> */}\n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Home.js",["446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462"],"import React, { Component }  from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport Navbar from  \"./Navbar\"\n\n\n\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\n\n\nimport { SetPopupContext } from \"../App\";\n\n\nimport apiList from \"../lib/apiList\";\nimport { userType } from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  button: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst JobTile = (props) => {\n  const classes = useStyles();\n  const { job } = props;\n  const setPopup = useContext(SetPopupContext);\n\n  const [open, setOpen] = useState(false);\n  const [sop, setSop] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n    setSop(\"\");\n  };\n\n  const handleApply = () => {\n    console.log(job._id);\n    console.log(sop);\n    axios\n      .post(\n        `${apiList.jobs}/${job._id}/applications`,\n        {\n          sop: sop,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleClose();\n      });\n  };\n\n  const deadline = new Date(job.deadline).toLocaleDateString();\n\n  return (\n    <>\n       <div class=\"max-w-7xl py-2\">\n       <div class=\"\">\n       <div class=\"max-w- mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-4xl flex\">\n       <div class=\"md:shrink-0\">\n                 <img class=\"h-48 w-full object-cover md:h-full md:w-48\" src=\"https://imgur.com/Pa0pZpl.jpg\" alt=\"Man looking at item at a store\"/>\n           </div>\n           <div class=\"px-4\"></div>\n           \n      <Grid container>\n   \n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n          <p class=\"mt-2 text-l leading-8 font-bold tracking-tight text-gray-900 sm:text-4xl py-2\">\n          {job.title}\n          </p>\n       \n          </Grid>\n          <span class=\"px-2\">\n          <Grid item>\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\n          </Grid>\n          <Grid item>\n          <p class=\"ml-3 leading-6  text-gray-700\">\n            Role : {job.jobType}</p></Grid>\n          <Grid item>\n          <p class=\"ml-3 leading-6  text-gray-700\">\n            Salary : &#8377; {job.salary} per month</p></Grid>\n          <Grid item>  <p class=\"ml-3 leading-6  text-gray-700\">\n            Duration :{\" \"}\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\n          </p>\n          </Grid>\n          <Grid item>\n          <p class=\"ml-3 leading-6  text-gray-700\">\n            Posted By : {job.recruiter.name}</p></Grid>\n          <Grid item>\n          <p class=\"ml-3 leading-6  text-gray-700\">\n            Application Deadline : {deadline}</p></Grid>\n            <Grid>\n            <p class=\"ml-3 leading-6  text-gray-700\">\n            address: {job.address}</p></Grid>\n       \n          <Grid item>  <p class=\"ml-2 leading-6  text-gray-700 py-3\">\n            {job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}</p>\n          </Grid>\n         \n          </span>\n        </Grid>\n\n        <Grid item xs={3}>\n          <div class=\"py-4\"></div>\n        <button type=\"button\" class=\"py-24 text-white bg-indigo-800 hover:bg-indigo-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-16 text-center mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n            onClick={() => {\n              setOpen(true);\n            }}\n            disabled={userType() === \"recruiter\"}\n          >\n            Click to contact\n          </button>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"50%\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextField\n            label=\"Write SOP (upto 250 words)\"\n            multiline\n            rows={8}\n            style={{ width: \"100%\", marginBottom: \"30px\" }}\n            variant=\"outlined\"\n            value={sop}\n            onChange={(event) => {\n              if (\n                event.target.value.split(\" \").filter(function (n) {\n                  return n != \"\";\n                }).length <= 250\n              ) {\n                setSop(event.target.value);\n              }\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => handleApply()}\n          >\n            Submit\n          </Button>\n   \n        </Paper>\n      </Modal>\n    \n    </div>\n    </div>\n    </div>\n    </>\n  );\n};\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n         \n\n\n\n\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Salary\n            </Grid>\n            <Grid item xs={9}>\n              <Slider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => {\n                  return value * (100000 / 100);\n                }}\n                marks={[\n                  { value: 0, label: \"0\" },\n                  { value: 100, label: \"100000\" },\n                ]}\n                value={searchOptions.salary}\n                onChange={(event, value) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    salary: value,\n                  })\n                }\n              />\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Duration\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                select\n                label=\"Duration\"\n                variant=\"outlined\"\n                fullWidth\n                value={searchOptions.duration}\n                onChange={(event) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    duration: event.target.value,\n                  })\n                }\n              >\n                <MenuItem value=\"0\">All</MenuItem>\n                <MenuItem value=\"1\">1</MenuItem>\n                <MenuItem value=\"2\">2</MenuItem>\n                <MenuItem value=\"3\">3</MenuItem>\n                <MenuItem value=\"4\">4</MenuItem>\n                <MenuItem value=\"5\">5</MenuItem>\n                <MenuItem value=\"6\">6</MenuItem>\n                <MenuItem value=\"7\">7</MenuItem>\n              </TextField>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"salary\"\n                    checked={searchOptions.sort.salary.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"salary\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"salary\">\n                    <Typography>Salary</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.salary.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            desc: !searchOptions.sort.salary.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.salary.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"duration\"\n                    checked={searchOptions.sort.duration.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"duration\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"duration\">\n                    <Typography>Duration</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.duration.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            desc: !searchOptions.sort.duration.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.duration.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort.rating.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.rating.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            desc: !searchOptions.sort.rating.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.rating.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst Home = (props) => {\n  const [jobs, setJobs] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    query: \"\",\n    jobType: {\n      fullTime: false,\n      partTime: false,\n      wfh: false,\n    },\n    salary: [0, 100],\n    duration: \"0\",\n    sort: {\n      salary: {\n        status: false,\n        desc: false,\n      },\n      duration: {\n        status: false,\n        desc: false,\n      },\n      rating: {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n    if (searchOptions.query !== \"\") {\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\n    }\n    if (searchOptions.jobType.architect) {\n      searchParams = [...searchParams, `jobType=Architect`];\n    }\n    if (searchOptions.jobType.contractor) {\n      searchParams = [...searchParams, `jobType=Contractor`];\n    }\n    if (searchOptions.jobType.worker) {\n      searchParams = [...searchParams, `jobType=Worker`];\n    }\n\n    if (searchOptions.jobType.mistri) {\n      searchParams = [...searchParams, `jobType=Mistri`];\n    }\n    if (searchOptions.jobType.tool) {\n      searchParams = [...searchParams, `jobType=Tool`];\n    }\n    if (searchOptions.jobType.plumber) {\n      searchParams = [...searchParams, `jobType=Plumber`];\n    }\n    if (searchOptions.jobType.electrican) {\n      searchParams = [...searchParams, `jobType=Electrican`];\n    }\n\n    if (searchOptions.salary[0] != 0) {\n      searchParams = [\n        ...searchParams,\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\n      ];\n    }\n    if (searchOptions.salary[1] != 100) {\n      searchParams = [\n        ...searchParams,\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\n      ];\n    }\n    if (searchOptions.duration != \"0\") {\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = apiList.jobs;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setJobs(\n          response.data.filter((obj) => {\n            const today = new Date();\n            const deadline = new Date(obj.deadline);\n            return deadline > today;\n          })\n        );\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n  const settings = {\n    dots: false,\n    autoplay: true,\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n  return (\n    <>\n     <Navbar/>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs>\n          <div class=\"max-w-7xl mx-auto  py-2\">\n    <div class=\"lg:text-center\">\n      <h2 class=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\"></h2>\n      <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl flex\">A better way to find On Services, On Demand \n       </p>\n      \n\n      <img class=\"block mx-auto h-10 w-40 rounded-full sm:mx-0 sm:shrink-0\" src=\"https://imgur.com/ux9PKcU.png\" alt=\"Woman's Face\"/>\n              \n    </div>\n   </div>\n          </Grid>\n          <span class=\"py-4\"></span>\n          <Grid item xs>\n            <TextField\n              label=\"Search By Location\"\n              value={searchOptions.query}\n              onChange={(event) =>\n                setSearchOptions({\n                  ...searchOptions,\n                  query: event.target.value,\n                })\n              }\n              onKeyPress={(ev) => {\n                if (ev.key === \"Enter\") {\n                  getData();\n                }\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton onClick={() => getData()}>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              style={{ width: \"500px\" }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item>\n            <IconButton onClick={() => setFilterOpen(true)}>\n              <FilterListIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <span class=\"py-2\"></span>\n    <div class=\"lg:text-center \">\n      <h2 class=\"text-base text-indigo-600 font-semibold tracking-wide uppercase  py-2\">Filter By categories </h2>\n    </div>\n    <span class=\"py-4\"></span>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n             \n              <Grid item>\n\n\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/4fZdkbR.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"architect\"\n                      checked={searchOptions.jobType.architect}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Architect\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/zezzlRp.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"contractor\"\n                      checked={searchOptions.jobType.contractor}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Contractor\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/KsRkovX.png\"/>\n\n                   <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"worker\"\n                      checked={searchOptions.jobType.worker}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"worker\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/klb7vI6.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"mistri\"\n                      checked={searchOptions.jobType.mistri}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Mistri\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/GiIkYtC.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"tool\"\n                      checked={searchOptions.jobType.tool}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Tool\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/uyHLy3k.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"plumber\"\n                      checked={searchOptions.jobType.plumber}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Plumber\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/hVbpnFc.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"electrican\"\n                      checked={searchOptions.jobType.electrican}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Electrican\"\n                />\n              </Grid>\n            </Grid>\n        \n            <span class=\"py-2\"></span>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n  \n          \n        \n       <span class=\"py-8\"></span>\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {jobs.length > 0 ? (\n            jobs.map((job) => {\n              return <JobTile job={job} />;\n            })\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No jobs found\n            </Typography>\n          )}\n        </Grid>\n        {/* <Grid item>\n          <Pagination count={10} color=\"primary\" />\n        </Grid> */}\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default Home;\n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Applications.js",["463","464","465","466","467","468","469","470","471","472"],"import React, { Component }  from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\n\nimport Navbar from './Navbar';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n  const [rating, setRating] = useState(application.job.rating);\n\n  const appliedOn = new Date(application.dateOfApplication);\n  const joinedOn = new Date(application.dateOfJoining);\n\n  const fetchRating = () => {\n    axios\n      .get(`${apiList.rating}?id=${application.job._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setRating(response.data.rating);\n        console.log(response.data);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const changeRating = () => {\n    axios\n      .put(\n        apiList.rating,\n        { rating: rating, jobId: application.job._id },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.data);\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: \"Rating updated successfully\",\n        });\n        fetchRating();\n        setOpen(false);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        fetchRating();\n        setOpen(false);\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n  return (\n    <>\n\n   <Navbar />\n\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n          <p class=\"mt-2 text-xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">{application.job.title}</p>\n  \n          </Grid>\n          <span class=\"py-2\"></span>\n          <Grid item>Posted By: {application.recruiter.name}</Grid>\n          <Grid item>Role : {application.job.jobType}</Grid>\n          <Grid item>Salary : &#8377; {application.job.salary} per month</Grid>\n          <Grid item>\n            Duration :{\" \"}\n            {application.job.duration !== 0\n              ? `${application.job.duration} month`\n              : `Flexible`}\n          </Grid>\n          <Grid item>\n            {application.job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\n          {application.status === \"accepted\" ||\n          application.status === \"finished\" ? (\n            <Grid item>Joined On: {joinedOn.toLocaleDateString()}</Grid>\n          ) : null}\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item xs>\n            <Paper\n              className={classes.statusBlock}\n              style={{\n                background: colorSet[application.status],\n                color: \"#ffffff\",\n              }}\n            >\n              {application.status}\n            </Paper>\n          </Grid>\n          {application.status === \"accepted\" ||\n          application.status === \"finished\" ? (\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.statusBlock}\n                onClick={() => {\n                  fetchRating();\n                  setOpen(true);\n                }}\n              >\n                Rate Job\n              </Button>\n            </Grid>\n          ) : null}\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Rating\n            name=\"simple-controlled\"\n            style={{ marginBottom: \"30px\" }}\n            value={rating === -1 ? null : rating}\n            onChange={(event, newValue) => {\n              setRating(newValue);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n    </>\n  );\n};\n\nconst Applications = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.applications, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <Grid\n      container\n      item\n      direction=\"column\"\n      alignItems=\"center\"\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\n    >\n      <Grid item>\n      <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Application</p>\n      <img class=\"block mx-auto h-10 w-40 rounded-full sm:mx-0 sm:shrink-0\" src=\"https://imgur.com/ux9PKcU.png\" alt=\"Woman's Face\"/>\n              \n      </Grid>\n      <Grid\n        container\n        item\n        xs\n        direction=\"column\"\n        style={{ width: \"100%\" }}\n        alignItems=\"stretch\"\n        justify=\"center\"\n      >\n        {applications.length > 0 ? (\n          applications.map((obj) => (\n            <Grid item>\n              <ApplicationTile application={obj} />\n            </Grid>\n          ))\n        ) : (\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n            No Applications Found\n          </Typography>\n        )}\n      </Grid>\n    </Grid>\n  \n  );\n};\n\nexport default Applications;\n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/Profile.js",["473","474","475","476","477","478","479","480","481","482","483"],"import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n  const { education, setEducation } = props;\n\n  return (\n    <>\n      {education.map((obj, key) => (\n        <Grid item container className={classes.inputBox} key={key}>\n          <Grid item xs={6}>\n            <TextField\n              label={`Institution Name #${key + 1}`}\n              value={education[key].institutionName}\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].institutionName = event.target.value;\n                setEducation(newEdu);\n              }}\n              variant=\"outlined\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"Start Year\"\n              value={obj.startYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].startYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"End Year\"\n              value={obj.endYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].endYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item style={{ alignSelf: \"center\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setEducation([\n              ...education,\n              {\n                institutionName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n              },\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add another institution details\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [userData, setUserData] = useState();\n  const [open, setOpen] = useState(false);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    education: [],\n    skills: [],\n\n  });\n\n  const [education, setEducation] = useState([\n    {\n      institutionName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n    },\n  ]);\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        if (response.data.education.length > 0) {\n          setEducation(\n            response.data.education.map((edu) => ({\n              institutionName: edu.institutionName ? edu.institutionName : \"\",\n              startYear: edu.startYear ? edu.startYear : \"\",\n              endYear: edu.endYear ? edu.endYear : \"\",\n            }))\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const editDetails = () => {\n    setOpen(true);\n  };\n\n  const handleUpdate = () => {\n    console.log(education);\n\n    let updatedDetails = {\n      ...profileDetails,\n      education: education\n        .filter((obj) => obj.institutionName.trim() !== \"\")\n        .map((obj) => {\n          if (obj[\"endYear\"] === \"\") {\n            delete obj[\"endYear\"];\n          }\n          return obj;\n        }),\n    };\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Profile</Typography>\n        </Grid>\n        <Grid item xs>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              </Grid>\n              \n              <Grid item>\n                <ChipInput\n                  className={classes.inputBox}\n                  label=\"Skills\"\n                  variant=\"outlined\"\n                  helperText=\"Press enter to add skills\"\n                  value={profileDetails.skills}\n                  onAdd={(chip) =>\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: [...profileDetails.skills, chip],\n                    })\n                  }\n                  onDelete={(chip, index) => {\n                    let skills = profileDetails.skills;\n                    skills.splice(index, 1);\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: skills,\n                    });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n            \n\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n      {/* <Modal open={open} onClose={handleClose} className={classes.popupDialog}> */}\n\n      {/* </Modal> */}\n    </>\n  );\n};\n\nexport default Profile;\n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/recruiter/CreateJobs.js",["484","485","486","487"],"import React, { Component }  from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\nimport Navbar from \"../Navbar\"\n//icon \nimport { FaCheck } from \"react-icons/fa\";\nimport { FaBullhorn} from \"react-icons/fa\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst CreateJobs = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [jobDetails, setJobDetails] = useState({\n    title: \"\",\n    maxApplicants: 100,\n    deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\n      .toISOString()\n      .substr(0, 16),\n    skillsets: [],\n    jobType: \"Architect\",\n    duration: 0,\n    salary: 0,\n  });\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleUpdate = () => {\n    console.log(jobDetails);\n    axios\n      .post(apiList.jobs, jobDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        setJobDetails({\n          title: \"\",\n          maxApplicants: 100,\n          deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\n            .toISOString()\n            .substr(0, 16),\n          skillsets: [],\n          jobType: \"Architect\",\n          duration: 0,\n          salary: 0,\n        });\n      })\n      .catch((err) => {\n      \n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n\n<div class=\"hidden md:block\">\n  <Navbar />\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={1} />\n        <Grid item xs={7}>\n          <Paper className={classes.paper} elevation={2}>\n            <Grid container>\n              <Grid item sm>\n              <div class=\"lg:text-center\">\n                 <p class=\"mt-2 py-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n                   ADD YOU JOB\n                 </p>\n                \n                 </div>\n                 <img class=\"block mx-auto h-10 w-40 rounded-full sm:mx-0 sm:shrink-0\" src=\"https://imgur.com/ux9PKcU.png\" alt=\"Woman's Face\"/>\n              \n                  \n                <p class=\"flex text-sm is-info is-light justify-center \">\n                <span class=\"bg-red\">\n                  <FaCheck />\n                </span>\n                <span class=\"px-2 tx-sm\">\n                <small>1.Tell Us About Your Shop</small></span> \n              <span class=\"bg-red\">\n                  <FaCheck />\n                </span>\n              <span class=\"px-2\">\n            <small> 2. Verify your Email.</small></span>\n\n\n              <span class=\"bg-red\">\n                  <FaCheck />\n                </span>\n              <span class=\"px-2\">\n               <small>3. Access Shop Dashboard and go live.</small></span>\n               \n              </p>\n                 <span class=\"px-4 justify-start  text-indigo-800 flex text-lg\">\n                  <FaBullhorn /> <span class=\"py-4 px-2\"></span> Get Started\n                </span>\n                <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\", width: \"\" }}\n      >\n             \n        <Grid item>\n        <div class=\" mx-auto px-4 sm:px-6 lg:px-8\">\n \n       </div>\n        </Grid>\n        \n\n        <Grid item container xs direction=\"column\" justify=\"center\">\n        <div class=\"lg:text-center\">\n        <div class=\"max-w-6xl text-center\">\n          <Grid item>\n      \n              <Grid\n                container\n                direction=\"column\"\n                alignItems=\"stretch\"\n                spacing={3}\n              >\n                <Grid item>\n                  <TextField\n                    label=\"Title\"\n                    value={jobDetails.title}\n                    onChange={(event) =>\n                      handleInput(\"title\", event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <ChipInput\n                    className={classes.inputBox}\n                    label=\"Skills\"\n                    variant=\"outlined\"\n                    helperText=\"Press enter to add skills\"\n                    value={jobDetails.skillsets}\n                    onAdd={(chip) =>\n                      setJobDetails({\n                        ...jobDetails,\n                        skillsets: [...jobDetails.skillsets, chip],\n                      })\n                    }\n                    onDelete={(chip, index) => {\n                      let skillsets = jobDetails.skillsets;\n                      skillsets.splice(index, 1);\n                      setJobDetails({\n                        ...jobDetails,\n                        skillsets: skillsets,\n                      });\n                    }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    select\n                    label=\"Job Type\"\n                    variant=\"outlined\"\n                    value={jobDetails.jobType}\n                    onChange={(event) => {\n                      handleInput(\"jobType\", event.target.value);\n                    }}\n                    fullWidth\n                  >\n                    <MenuItem value=\"Architect\">Architect</MenuItem>\n                    <MenuItem value=\"Contractor\">Contractor</MenuItem>\n                    <MenuItem value=\"Worker\">Worker</MenuItem>\n                    <MenuItem value=\"Mistri\">Mistri</MenuItem>\n                    <MenuItem value=\"Tool\">Tool</MenuItem>\n                    <MenuItem value=\"Plumber\">Plumber</MenuItem>\n                    <MenuItem value=\"Electrican\">Electrican</MenuItem>\n\n                  </TextField>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    select\n                    label=\"Duration\"\n                    variant=\"outlined\"\n                    value={jobDetails.duration}\n                    onChange={(event) => {\n                      handleInput(\"duration\", event.target.value);\n                    }}\n                    fullWidth\n                  >\n                    <MenuItem value={0}>Flexible</MenuItem>\n                    <MenuItem value={1}>1 Month</MenuItem>\n                    <MenuItem value={2}>2 Months</MenuItem>\n                    <MenuItem value={3}>3 Months</MenuItem>\n                    <MenuItem value={4}>4 Months</MenuItem>\n                    <MenuItem value={5}>5 Months</MenuItem>\n                    <MenuItem value={6}>6 Months</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Salary\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.salary}\n                    onChange={(event) => {\n                      handleInput(\"salary\", event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 0 } }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Address\"\n                    value={jobDetails.address}\n                    onChange={(event) =>\n                      handleInput(\"address\", event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Application Deadline\"\n                    type=\"datetime-local\"\n                    value={jobDetails.deadline}\n                    onChange={(event) => {\n                      handleInput(\"deadline\", event.target.value);\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Maximum Number Of Applicants\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.maxApplicants}\n                    onChange={(event) => {\n                      handleInput(\"maxApplicants\", event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 1 } }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n            \n                </Grid>\n              </Grid>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n                onClick={() => handleUpdate()}\n              >\n                Create Job\n              </Button>\n          \n           \n          </Grid>\n       </div> \n       </div>      \n        </Grid>\n\n      </Grid>\n                \n      \n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={3} style={{ marginLeft: \"40px\" }}>\n          <Paper\n            className={classes.paper}\n            style={{ backgroundColor: \"white\" }}\n            elevation={2}\n          >\n               <img class=\"h-50 py-8\" src=\"https://imgur.com/w3ZG08i.png\" alt=\"ChitChat Logo\"/>\n\n                 <div class=\"lg:text-center\">\n                 <p class=\"mt-2 py-2 text-xl leading-8 font-bold tracking-tight text-gray-900 sm:text-xl\">\n                    WHY ONLINE\n                    <img class=\"block mx-auto h-5 w-40 rounded-full sm:mx-0 sm:shrink-0\" src=\"https://imgur.com/ux9PKcU.png\" alt=\"Woman's Face\"/>\n                 </p>\n                 </div>\n    <div class=\"rounded-xl shadow-lg\">\n                 <div class=\"px-2 py-2 max-w-sm mx-auto bg-white  flex \">\n                <img class=\"block mx-auto h-12 rounded-full\" src=\"https://imgur.com/ug6QNgu.png\" alt=\"Woman's Face\"/>\n                <div class=\" \">\n              <div class=\"px-2\">\n               <p class=\" text-gray-900 \">\n               Growth in the retail market\n               </p>\n               <p class=\" text-gray-600\"> <small>india's retail industry is projected to grow at a slower pace of 9% over 2019-2030</small></p>\n                </div> </div>\n</div>\n\n<div class=\" px-4 py-2 max-w-sm mx-auto bg-white  flex \">\n                <img class=\"block mx-auto h-12 rounded-full\" src=\"https://imgur.com/urPMCqR.png\" alt=\"Woman's Face\"/>\n                <div class=\" \">\n              <div class=\"px-2\">\n               <p class=\" text-gray-900 \">\n               Earn Big\n      </p>\n      <p class=\" text-gray-600\"> <small>Our payments process is the fastest in the industry - get your payments in as little as 7 days of sales</small></p>\n    </div> </div>\n</div>\n\n<div class=\"px-2 py-2  max-w-sm mx-auto bg-white  flex \">\n                <img class=\"block mx-auto h-12 rounded-full\" src=\"https://imgur.com/OJfgZoT.png\" alt=\"Woman's Face\"/>\n                <div class=\" \">\n              <div class=\"px-2\">\n               <p class=\" text-gray-900 \">\n               Get orders across India\n      </p>\n      <p class=\" text-gray-600\"> <small> E-commerce has transformed the way business is done in India. </small></p>\n    </div> </div>\n</div>\n</div>\n\n\n\n<div class=\"py-4 lg:text-center\">\n                 <p class=\"mt-2 py-2 text-xl leading-8 font-bold tracking-tight text-gray-900 sm:text-xl\">\n                    WHY GOHARDWARE.IN\n                    <img class=\"block mx-auto h-5 w-40 rounded-full sm:mx-0 sm:shrink-0\" src=\"https://imgur.com/ux9PKcU.png\" alt=\"Woman's Face\"/>\n                 </p>\n                 </div>\n    <div class=\"rounded-xl shadow-lg\">\n                 <div class=\"px-2 py-2 max-w-sm mx-auto bg-white  flex \">\n                <img class=\"block mx-auto h-12 rounded-full\" src=\"https://imgur.com/4wflIfx.png\" alt=\"Woman's Face\"/>\n                <div class=\" \">\n              <div class=\"px-2\">\n               <p class=\" text-gray-900 \">\n               Growth \n               </p>\n               <p class=\" text-gray-600\"> <small>\n               wide range of customer base, With the increasing demand for online shopping, businesses are moving from a brick-and-mortar store to an electronic one.\n                </small></p>\n                </div> </div>\n</div>\n\n<div class=\" px-4 py-2 max-w-sm mx-auto bg-white  flex \">\n                <img class=\"block mx-auto h-12 rounded-full\" src=\"https://imgur.com/pMEWbCL.png\" alt=\"Woman's Face\"/>\n                <div class=\" \">\n              <div class=\"px-2\">\n               <p class=\" text-gray-900 \">\n               Ease\n      </p>\n      <p class=\" text-gray-600\"> <small>You Just need 1 product and 2 documents to start selling on gohardware</small></p>\n    </div> </div>\n</div>\n\n<div class=\"px-2 py-2  max-w-sm mx-auto bg-white  flex \">\n                <img class=\"block mx-auto h-12 rounded-full\" src=\"https://imgur.com/Nub4QGy.png\" alt=\"Woman's Face\"/>\n                <div class=\" \">\n              <div class=\"px-2\">\n               <p class=\" text-gray-900 \">\n                   Transparency\n      </p>\n      <p class=\" text-gray-600\"> <small> Equal Opportunities for all the sellers to grow </small></p>\n    </div> </div>\n</div>\n</div>\n          </Paper>\n        </Grid>\n        <Grid item xs={1} />\n      </Grid>\n    </div>\n    </div>\n    \n    </>\n  );\n};\n\nexport default CreateJobs;\n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/recruiter/JobApplications.js",["488","489","490","491","492","493"],"import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n  Avatar,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList, { server } from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Application Status\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"rejected\"\n                      checked={searchOptions.status.rejected}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Rejected\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"applied\"\n                      checked={searchOptions.status.applied}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Applied\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"shortlisted\"\n                      checked={searchOptions.status.shortlisted}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Shortlisted\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"name\"\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"name\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"name\">\n                    <Typography>Name</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"dateOfApplication\"\n                    checked={searchOptions.sort.dateOfApplication.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfApplication: {\n                            ...searchOptions.sort.dateOfApplication,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"dateOfApplication\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"dateOfApplication\">\n                    <Typography>Date of Application</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.dateOfApplication.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfApplication: {\n                            ...searchOptions.sort.dateOfApplication,\n                            desc: !searchOptions.sort.dateOfApplication.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.dateOfApplication.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\n                              .desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n\n  const appliedOn = new Date(application.dateOfApplication);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n  const getResume = () => {\n    if (\n      application.jobApplicant.resume &&\n      application.jobApplicant.resume !== \"\"\n    ) {\n      const address = `${server}${application.jobApplicant.resume}`;\n      console.log(address);\n      axios(address, {\n        method: \"GET\",\n        responseType: \"blob\",\n      })\n        .then((response) => {\n          const file = new Blob([response.data], { type: \"application/pdf\" });\n          const fileURL = URL.createObjectURL(file);\n          window.open(fileURL);\n        })\n        .catch((error) => {\n          console.log(error);\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: \"Error\",\n          });\n        });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"No resume found\",\n      });\n    }\n  };\n\n  const updateStatus = (status) => {\n    const address = `${apiList.applications}/${application._id}`;\n    const statusData = {\n      status: status,\n      dateOfJoining: new Date().toISOString(),\n    };\n    axios\n      .put(address, statusData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  const buttonSet = {\n    applied: (\n      <>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"shortlisted\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"shortlisted\")}\n          >\n            Shortlist\n          </Button>\n        </Grid>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"rejected\")}\n          >\n            Reject\n          </Button>\n        </Grid>\n      </>\n    ),\n    shortlisted: (\n      <>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"accepted\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"accepted\")}\n          >\n            Accept\n          </Button>\n        </Grid>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"rejected\")}\n          >\n            Reject\n          </Button>\n        </Grid>\n      </>\n    ),\n    rejected: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Rejected\n          </Paper>\n        </Grid>\n      </>\n    ),\n    accepted: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"accepted\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Accepted\n          </Paper>\n        </Grid>\n      </>\n    ),\n    cancelled: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"cancelled\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Cancelled\n          </Paper>\n        </Grid>\n      </>\n    ),\n    finished: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"finished\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Finished\n          </Paper>\n        </Grid>\n      </>\n    ),\n  };\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid\n          item\n          xs={2}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar\n            src={`${server}${application.jobApplicant.profile}`}\n            className={classes.avatar}\n          />\n        </Grid>\n        <Grid container item xs={7} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">\n              {application.jobApplicant.name}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Rating\n              value={\n                application.jobApplicant.rating !== -1\n                  ? application.jobApplicant.rating\n                  : null\n              }\n              readOnly\n            />\n          </Grid>\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\n          <Grid item>\n            Education:{\" \"}\n            {application.jobApplicant.education\n              .map((edu) => {\n                return `${edu.institutionName} (${edu.startYear}-${\n                  edu.endYear ? edu.endYear : \"Ongoing\"\n                })`;\n              })\n              .join(\", \")}\n          </Grid>\n          <Grid item>\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\n          </Grid>\n          <Grid item>\n            {application.jobApplicant.skills.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.statusBlock}\n              color=\"primary\"\n              onClick={() => getResume()}\n            >\n              Download Resume\n            </Button>\n          </Grid>\n          <Grid item container xs>\n            {buttonSet[application.status]}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            // onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst JobApplications = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const { jobId } = useParams();\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    status: {\n      all: false,\n      applied: false,\n      shortlisted: false,\n    },\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false,\n      },\n      dateOfApplication: {\n        status: true,\n        desc: true,\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n\n    if (searchOptions.status.rejected) {\n      searchParams = [...searchParams, `status=rejected`];\n    }\n    if (searchOptions.status.applied) {\n      searchParams = [...searchParams, `status=applied`];\n    }\n    if (searchOptions.status.shortlisted) {\n      searchParams = [...searchParams, `status=shortlisted`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = `${apiList.applicants}?jobId=${jobId}`;\n    if (queryString !== \"\") {\n      address = `${address}&${queryString}`;\n    }\n\n    console.log(address);\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // console.log(err.response.data);\n        setApplications([]);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Applications</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton onClick={() => setFilterOpen(true)}>\n            <FilterListIcon />\n          </IconButton>\n        </Grid>\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          style={{ width: \"100%\" }}\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {applications.length > 0 ? (\n            applications.map((obj) => (\n              <Grid item>\n                {/* {console.log(obj)} */}\n                <ApplicationTile application={obj} getData={getData} />\n              </Grid>\n            ))\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No Applications Found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default JobApplications;\n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/recruiter/AcceptedApplicants.js",["494","495","496","497","498","499","500","501","502","503","504"],"import React, { Component }  from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n  Avatar,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport Navbar from \"../Navbar\";\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList, { server } from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          {/* <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Application Status\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"rejected\"\n                      checked={searchOptions.status.rejected}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Rejected\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"applied\"\n                      checked={searchOptions.status.applied}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Applied\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"shortlisted\"\n                      checked={searchOptions.status.shortlisted}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Shortlisted\"\n                />\n              </Grid>\n            </Grid>\n          </Grid> */}\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"name\"\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"name\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"name\">\n                    <Typography>Name</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"jobTitle\"\n                    checked={searchOptions.sort[\"job.title\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"job.title\": {\n                            ...searchOptions.sort[\"job.title\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"jobTitle\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"jobTitle\">\n                    <Typography>Job Title</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"job.title\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"job.title\": {\n                            ...searchOptions.sort[\"job.title\"],\n                            desc: !searchOptions.sort[\"job.title\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"job.title\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"dateOfJoining\"\n                    checked={searchOptions.sort.dateOfJoining.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfJoining: {\n                            ...searchOptions.sort.dateOfJoining,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"dateOfJoining\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"dateOfJoining\">\n                    <Typography>Date of Joining</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.dateOfJoining.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfJoining: {\n                            ...searchOptions.sort.dateOfJoining,\n                            desc: !searchOptions.sort.dateOfJoining.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.dateOfJoining.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\n                              .desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n  const [openEndJob, setOpenEndJob] = useState(false);\n  const [rating, setRating] = useState(application.jobApplicant.rating);\n\n  const appliedOn = new Date(application.dateOfApplication);\n\n  const changeRating = () => {\n    axios\n      .put(\n        apiList.rating,\n        { rating: rating, applicantId: application.jobApplicant.userId },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.data);\n       \n       \n      \n        // fetchRating();\n        getData();\n        setOpen(false);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err);\n   \n        // fetchRating();\n        getData();\n        setOpen(false);\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseEndJob = () => {\n    setOpenEndJob(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n\n\n  const updateStatus = (status) => {\n    const address = `${apiList.applications}/${application._id}`;\n    const statusData = {\n      status: status,\n      dateOfJoining: new Date().toISOString(),\n    };\n    axios\n      .put(address, statusData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        handleCloseEndJob();\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n        handleCloseEndJob();\n      });\n  };\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid\n          item\n          xs={2}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar\n            src={`${server}${application.jobApplicant.profile}`}\n            className={classes.avatar}\n          />\n        </Grid>\n        <Grid container item xs={7} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">\n              {application.jobApplicant.name}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Rating\n              value={\n                application.jobApplicant.rating !== -1\n                  ? application.jobApplicant.rating\n                  : null\n              }\n              readOnly\n            />\n          </Grid>\n          <Grid item>Job Title: {application.job.title}</Grid>\n          <Grid item>Role: {application.job.jobType}</Grid>\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\n          <Grid item>\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\n          </Grid>\n          <Grid item>\n            {application.jobApplicant.skills.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n      \n          <Grid item container xs>\n            {/* {buttonSet[application.status]} */}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              style={{\n                background: \"#09BC8A\",\n              }}\n              onClick={() => {\n                setOpenEndJob(true);\n              }}\n            >\n              End Job\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpen(true);\n              }}\n            >\n              Rate Applicant\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Rating\n            name=\"simple-controlled\"\n            style={{ marginBottom: \"30px\" }}\n            value={rating === -1 ? null : rating}\n            onChange={(event, newValue) => {\n              setRating(newValue);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n      <Modal\n        open={openEndJob}\n        onClose={handleCloseEndJob}\n        className={classes.popupDialog}\n      >\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Are you sure?\n          </Typography>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => {\n                  updateStatus(\"finished\");\n                }}\n              >\n                Yes\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleCloseEndJob()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst AcceptedApplicants = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false,\n      },\n      \"job.title\": {\n        status: false,\n        desc: false,\n      },\n      dateOfJoining: {\n        status: true,\n        desc: true,\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n    searchParams = [...searchParams, `status=accepted`];\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = `${apiList.applicants}`;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    console.log(address);\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // console.log(err.response.data);\n        setApplications([]);\n\n      });\n  };\n\n  return (\n    <>\n    <Navbar />\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n    <div class=\"lg:text-center\">\n      <p class=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">Employees</p>\n    </div>\n    </div>\n        </Grid>\n        <Grid item>\n          <IconButton onClick={() => setFilterOpen(true)}>\n            <FilterListIcon />\n          </IconButton>\n        </Grid>\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          style={{ width: \"100%\" }}\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {applications.length > 0 ? (\n            applications.map((obj) => (\n              <Grid item>\n                {/* {console.log(obj)} */}\n                <ApplicationTile application={obj} getData={getData} />\n              </Grid>\n            ))\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No Applications Found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default AcceptedApplicants;","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/recruiter/Profile.js",["505","506","507"],"import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    bio: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        setPhone(response.data.contactNumber);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const handleUpdate = () => {\n    let updatedDetails = {\n      ...profileDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Profile</Typography>\n        </Grid>\n        <Grid item xs style={{ width: \"100%\" }}>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              //   width: \"60%\",\n            }}\n          >\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                  style={{ width: \"100%\" }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Bio (upto 250 words)\"\n                  multiline\n                  rows={8}\n                  style={{ width: \"100%\" }}\n                  variant=\"outlined\"\n                  value={profileDetails.bio}\n                  onChange={(event) => {\n                    if (\n                      event.target.value.split(\" \").filter(function (n) {\n                        return n != \"\";\n                      }).length <= 250\n                    ) {\n                      handleInput(\"bio\", event.target.value);\n                    }\n                  }}\n                />\n              </Grid>\n              <Grid\n                item\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <PhoneInput\n                  country={\"in\"}\n                  value={phone}\n                  onChange={(phone) => setPhone(phone)}\n                  style={{ width: \"auto\" }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/component/recruiter/MyJobs.js",["508","509","510","511","512","513","514"],"import React, { Component }  from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\n\nimport Navbar from \"../Navbar\"\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  button: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n}));\n\nconst JobTile = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const { job, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n\n  const [open, setOpen] = useState(false);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [jobDetails, setJobDetails] = useState(job);\n\n  console.log(jobDetails);\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleClick = (location) => {\n    history.push(location);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseUpdate = () => {\n    setOpenUpdate(false);\n  };\n\n  const handleDelete = () => {\n    console.log(job._id);\n    axios\n      .delete(`${apiList.jobs}/${job._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleClose();\n      });\n  };\n\n  const handleJobUpdate = () => {\n    axios\n      .put(`${apiList.jobs}/${job._id}`, jobDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n        handleCloseUpdate();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleCloseUpdate();\n      });\n  };\n\n  const postedOn = new Date(job.dateOfPosting);\n\n  return (\n  <>\n  <Navbar />\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">{job.title}</Typography>\n          </Grid>\n          <Grid item>\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\n          </Grid>\n          <Grid item>Role : {job.jobType}</Grid>\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\n          <Grid item>\n            Duration :{\" \"}\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\n          </Grid>\n          <Grid item>Date Of Posting: {postedOn.toLocaleDateString()}</Grid>\n          <Grid item>Number of Applicants: {job.maxApplicants}</Grid>\n       \n          <Grid item>\n            {job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item xs>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              onClick={() => handleClick(`/job/applications/${job._id}`)}\n            >\n              View Applications\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpenUpdate(true);\n              }}\n              style={{\n                background: \"#FC7A1E\",\n                color: \"#fff\",\n              }}\n            >\n              Update Details\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpen(true);\n              }}\n            >\n              Delete Job\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Are you sure?\n          </Typography>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleDelete()}\n              >\n                Delete\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleClose()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n      <Modal\n        open={openUpdate}\n        onClose={handleCloseUpdate}\n        className={classes.popupDialog}\n      >\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Update Details\n          </Typography>\n          <Grid\n            container\n            direction=\"column\"\n            spacing={3}\n            style={{ margin: \"10px\" }}\n          >\n            <Grid item>\n              <TextField\n                label=\"Application Deadline\"\n                type=\"datetime-local\"\n                value={jobDetails.deadline.substr(0, 16)}\n                onChange={(event) => {\n                  handleInput(\"deadline\", event.target.value);\n                }}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Maximum Number Of Applicants\"\n                type=\"number\"\n                variant=\"outlined\"\n                value={jobDetails.maxApplicants}\n                onChange={(event) => {\n                  handleInput(\"maxApplicants\", event.target.value);\n                }}\n                InputProps={{ inputProps: { min: 1 } }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Positions Available\"\n                type=\"number\"\n                variant=\"outlined\"\n                value={jobDetails.maxPositions}\n                onChange={(event) => {\n                  handleInput(\"maxPositions\", event.target.value);\n                }}\n                InputProps={{ inputProps: { min: 1 } }}\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleJobUpdate()}\n              >\n                Update\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleCloseUpdate()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n    </Paper>\n</>\n  );\n};\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Job Type\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"fullTime\"\n                      checked={searchOptions.jobType.fullTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Full Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"partTime\"\n                      checked={searchOptions.jobType.partTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Part Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"wfh\"\n                      checked={searchOptions.jobType.wfh}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Work From Home\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Salary\n            </Grid>\n            <Grid item xs={9}>\n              <Slider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => {\n                  return value * (100000 / 100);\n                }}\n                marks={[\n                  { value: 0, label: \"0\" },\n                  { value: 100, label: \"100000\" },\n                ]}\n                value={searchOptions.salary}\n                onChange={(event, value) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    salary: value,\n                  })\n                }\n              />\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Duration\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                select\n                label=\"Duration\"\n                variant=\"outlined\"\n                fullWidth\n                value={searchOptions.duration}\n                onChange={(event) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    duration: event.target.value,\n                  })\n                }\n              >\n                <MenuItem value=\"0\">All</MenuItem>\n                <MenuItem value=\"1\">1</MenuItem>\n                <MenuItem value=\"2\">2</MenuItem>\n                <MenuItem value=\"3\">3</MenuItem>\n                <MenuItem value=\"4\">4</MenuItem>\n                <MenuItem value=\"5\">5</MenuItem>\n                <MenuItem value=\"6\">6</MenuItem>\n                <MenuItem value=\"7\">7</MenuItem>\n              </TextField>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"salary\"\n                    checked={searchOptions.sort.salary.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"salary\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"salary\">\n                    <Typography>Salary</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.salary.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            desc: !searchOptions.sort.salary.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.salary.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"duration\"\n                    checked={searchOptions.sort.duration.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"duration\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"duration\">\n                    <Typography>Duration</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.duration.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            desc: !searchOptions.sort.duration.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.duration.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort.rating.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.rating.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            desc: !searchOptions.sort.rating.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.rating.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst MyJobs = (props) => {\n  const [jobs, setJobs] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    query: \"\",\n    jobType: {\n      fullTime: false,\n      partTime: false,\n      wfh: false,\n    },\n    salary: [0, 100],\n    duration: \"0\",\n    sort: {\n      salary: {\n        status: false,\n        desc: false,\n      },\n      duration: {\n        status: false,\n        desc: false,\n      },\n      rating: {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [`myjobs=1`];\n    if (searchOptions.query !== \"\") {\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\n    }\n    if (searchOptions.jobType.fullTime) {\n      searchParams = [...searchParams, `jobType=Full%20Time`];\n    }\n    if (searchOptions.jobType.partTime) {\n      searchParams = [...searchParams, `jobType=Part%20Time`];\n    }\n    if (searchOptions.jobType.wfh) {\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\n    }\n    if (searchOptions.salary[0] != 0) {\n      searchParams = [\n        ...searchParams,\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\n      ];\n    }\n    if (searchOptions.salary[1] != 100) {\n      searchParams = [\n        ...searchParams,\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\n      ];\n    }\n    if (searchOptions.duration != \"0\") {\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = apiList.jobs;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    console.log(address);\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setJobs(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs>\n          <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl py-4\">My jobs</p>\n     \n           \n          </Grid>\n          <Grid item xs>\n            <TextField\n              label=\"Search Jobs\"\n              value={searchOptions.query}\n              onChange={(event) =>\n                setSearchOptions({\n                  ...searchOptions,\n                  query: event.target.value,\n                })\n              }\n              onKeyPress={(ev) => {\n                if (ev.key === \"Enter\") {\n                  getData();\n                }\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton onClick={() => getData()}>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              style={{ width: \"500px\" }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item>\n            <IconButton onClick={() => setFilterOpen(true)}>\n              <FilterListIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {jobs.length > 0 ? (\n            jobs.map((job) => {\n              return <JobTile job={job} getData={getData} />;\n            })\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No jobs found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default MyJobs;\n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/lib/isAuth.js",[],"/home/abhi/mainfile/jobpotal/job-portal/frontend/src/lib/MessagePopup.js",["515"],"import { Snackbar, Slide } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst MessagePopup = (props) => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.setOpen(false);\n  };\n  return (\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\n      <Alert onClose={handleClose} severity={props.severity}>\n        {props.message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default MessagePopup;\n","/home/abhi/mainfile/jobpotal/job-portal/frontend/src/lib/PasswordInput.js",[],"/home/abhi/mainfile/jobpotal/job-portal/frontend/src/lib/apiList.js",[],"/home/abhi/mainfile/jobpotal/job-portal/frontend/src/lib/EmailInput.js",[],"/home/abhi/mainfile/jobpotal/job-portal/frontend/src/lib/FileUploadInput.js",[],["516","517"],"/home/abhi/goservices/stage2/job-portal/frontend/src/index.js",[],["518","519"],"/home/abhi/goservices/stage2/job-portal/frontend/src/App.js",["520"],"/home/abhi/goservices/stage2/job-portal/frontend/src/reportWebVitals.js",[],"/home/abhi/goservices/stage2/job-portal/frontend/src/component/Navbar.js",["521","522","523","524"],"import React, { Component }  from 'react';\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    Button,\n    makeStyles,\n  } from \"@material-ui/core\";\n  import { useHistory } from \"react-router-dom\";\n  import { Link } from \"react-router-dom\";\n//\n  \n  import isAuth, { userType } from \"../lib/isAuth\";\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n  \n  const Navbar = (props) => {\n    const classes = useStyles();\n    let history = useHistory();\n  \n    const handleClick = (location) => {\n      console.log(location);\n      history.push(location);\n    };\n  \n    return (\n      <>\n\n      <div class=\"w3-hide-small\">\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n          <Link to=\"/\" className={classes.title}>\n            <span class=\"flex\">\n          <img class=\"h-8 w-auto sm:h-10\" src=\"https://imgur.com/0I2eClR.png\"/>\n           </span>\n           </Link>\n          \n       \n        \n          </Typography>\n          {isAuth() ? (\n            userType() === \"recruiter\" ? (\n              <>\n              <div class=\"py-1\">\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                onClick={() => handleClick(\"/home\")}>\n                Architect\n                </button>\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                 onClick={() => handleClick(\"/addjob\")}>\n                  Add Jobs\n                </button>\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                onClick={() => handleClick(\"/myjobs\")}>\n                  My Jobs\n                </button>\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                onClick={() => handleClick(\"/employees\")}>\n                  Employees\n                </button>\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                onClick={() => handleClick(\"/profile\")}>\n                  Profile\n                </button>\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-red-300 dark:focus:ring-red-800 shadow-lg shadow-red-500/50 dark:shadow-lg dark:shadow-red-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\" \n                \n                onClick={() => handleClick(\"/logout\")}>\n                  Logout\n                </button>\n                </div>\n              </>\n            ) : (\n              <>\n              <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n   \n                onClick={() => handleClick(\"/home\")}>\n                   Services\n                </button>\n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n   \n                  onClick={() => handleClick(\"/applications\")}\n                >\n                  Applications\n                </button>\n              \n                <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-red-300 dark:focus:ring-red-800 shadow-lg shadow-red-500/50 dark:shadow-lg dark:shadow-red-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\" \n                \n                onClick={() => handleClick(\"/logout\")}>\n                  Logout\n                </button>\n                \n              </>\n            )\n          ) : (\n            <>\n            <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 to-pink-500 hover:bg-gradient-to-l focus:ring-4 focus:ring-purple-200 dark:focus:ring-purple-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\" onClick={() => handleClick(\"/login\")}>\n                Login\n              </button>\n              \n             <button type=\"button\" class=\"py-3 text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\" onClick={() => handleClick(\"/signup\")}>\n                Signup\n              </button>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n      </div>\n\n     <div class=\"w3-hide-large w3-hide-medium\">\n     <div class=\"w3-bar\">\n  <button class=\"w3-button w3-left\">\n\n  <div class=\"w3-dropdown-hover\">\n    <button class=\"w3-button w3-black w3-small\">Menu</button><br></br>\n    <div class=\"w3-dropdown-content  w3-left\"  >\n      \n    {isAuth() ? (\n            userType() === \"recruiter\" ? (\n              <>\n  \n                <button type=\"button\" class=\"px-3 py-2 text-xs text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                onClick={() => handleClick(\"/home\")}>\n                Architect\n                </button>\n                <button type=\"button\" class=\"px-3 py-2 text-xs text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                 onClick={() => handleClick(\"/addjob\")}>\n                  Add Jobs\n                </button>\n                <button type=\"button\" class=\"px-3 py-2 text-xs text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                onClick={() => handleClick(\"/myjobs\")}>\n                  My Jobs\n                </button>\n                <button type=\"button\" class=\"px-3 py-2 text-xs text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                onClick={() => handleClick(\"/employees\")}>\n                  Employees\n                </button>\n                <button type=\"button\" class=\"px-3 py-2 text-xs text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                \n                onClick={() => handleClick(\"/profile\")}>\n                  Profile\n                </button>\n                <button type=\"button\" class=\"px-3 py-2 text-xs text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-red-300 dark:focus:ring-red-800 shadow-lg shadow-red-500/50 dark:shadow-lg dark:shadow-red-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\" \n                \n                onClick={() => handleClick(\"/logout\")}>\n                  Logout\n                </button>\n                \n              </>\n            ) : (\n              <>\n              <button type=\"button\" class=\"px-3 py-2 text-xs text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n   \n                onClick={() => handleClick(\"/home\")}>\n                   Services\n                </button>\n                <button type=\"button\" class=\"px-3 py-2 text-xs text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n   \n                  onClick={() => handleClick(\"/applications\")}\n                >\n                  Applications\n                </button>\n              \n                <button type=\"button\" class=\"px-3 py-2 text-xs text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-red-300 dark:focus:ring-red-800 shadow-lg shadow-red-500/50 dark:shadow-lg dark:shadow-red-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\" \n                \n                onClick={() => handleClick(\"/logout\")}>\n                  Logout\n                </button>\n                \n              </>\n            )\n          ) : (\n            <>\n            <button type=\"button\" class=\"px-3 py-2 text-xs text-white bg-gradient-to-r from-purple-500 to-pink-500 hover:bg-gradient-to-l focus:ring-4 focus:ring-purple-200 dark:focus:ring-purple-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\" onClick={() => handleClick(\"/login\")}>\n                Login\n              </button>\n              \n             <button type=\"button\" class=\"px-3 py-2 text-xs text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\" onClick={() => handleClick(\"/signup\")}>\n                Signup\n              </button>\n            </>\n          )}\n    </div>\n  </div>\n \n  </button>\n\n  <button class=\"w3-button w3-right py-2\">\n  <img class=\"h-8 w-auto sm:h-10\" src=\"https://imgur.com/0I2eClR.png\"/>\n  </button>\n</div>\n     </div>\n\n     </>\n    );\n  };\n  \n  export default Navbar;\n  \n","/home/abhi/goservices/stage2/job-portal/frontend/src/component/Applications.js",["525","526","527","528","529","530","531","532","533","534"],"/home/abhi/goservices/stage2/job-portal/frontend/src/component/Profile.js",["535","536","537","538","539","540","541","542","543","544","545"],"/home/abhi/goservices/stage2/job-portal/frontend/src/component/Login.js",["546","547","548"],"/home/abhi/goservices/stage2/job-portal/frontend/src/component/Welcome.js",["549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595"],"/home/abhi/goservices/stage2/job-portal/frontend/src/component/Home.js",["596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623"],"import React, { Component }  from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  \n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport Navbar from  \"./Navbar\"\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\n\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport  AutoPlay from \"./MobileHome\"\n\n\n\n\nimport { SetPopupContext } from \"../App\";\n\n\nimport apiList from \"../lib/apiList\";\nimport { userType } from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  button: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst JobTile = (props) => {\n  const classes = useStyles();\n  const { job } = props;\n  const setPopup = useContext(SetPopupContext);\n\n  const [open, setOpen] = useState(false);\n  const [sop, setSop] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n    setSop(\"\");\n  };\n\n  const handleApply = () => {\n    console.log(job._id);\n    console.log(sop);\n    axios\n      .post(\n        `${apiList.jobs}/${job._id}/applications`,\n        {\n          sop: sop,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleClose();\n      });\n  };\n\n  const deadline = new Date(job.deadline).toLocaleDateString();\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  }\n  return (\n    <>\n    <div class=\"w3-hide-small\">\n       <div class=\"max-w-7xl py-2\">\n       <div class=\"\">\n       <div class=\"max-w- mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-4xl flex\">\n       <div class=\"md:shrink-0\">\n                 <img class=\"h-48 w-full object-cover md:h-full md:w-48\" src=\"https://imgur.com/Pa0pZpl.jpg\" alt=\"Man looking at item at a store\"/>\n           </div>\n           <div class=\"px-4\"></div>\n           \n      <Grid container>\n   \n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n          <p class=\"mt-2 text-l leading-8 font-bold tracking-tight text-gray-900 sm:text-4xl py-2\">\n          {job.title}\n          </p>\n       \n          </Grid>\n          <span class=\"px-2\">\n          <Grid item>\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\n          </Grid>\n          <Grid item>\n          <p class=\"ml-3 leading-6  text-gray-700\">\n            Role : {job.jobType}</p></Grid>\n          <Grid item>\n          <p class=\"ml-3 leading-6  text-gray-700\">\n            Salary : &#8377; {job.salary} per month</p></Grid>\n          <Grid item>  <p class=\"ml-3 leading-6  text-gray-700\">\n            Duration :{\" \"}\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\n          </p>\n          </Grid>\n          <Grid item>\n          <p class=\"ml-3 leading-6  text-gray-700\">\n            Posted By : {job.recruiter.name}</p></Grid>\n          <Grid item>\n          <p class=\"ml-3 leading-6  text-gray-700\">\n            Application Deadline : {deadline}</p></Grid>\n            <Grid>\n            <p class=\"ml-3 leading-6  text-gray-700\">\n            address: {job.address}</p></Grid>\n       \n          <Grid item>  <p class=\"ml-2 leading-6  text-gray-700 py-3\">\n            {job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}</p>\n          </Grid>\n         \n          </span>\n        </Grid>\n\n        <Grid item xs={3}>\n          <div class=\"py-4\"></div>\n        <button type=\"button\" class=\"py-24 text-white bg-indigo-800 hover:bg-indigo-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-16 text-center mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n            onClick={() => {\n              setOpen(true);\n            }}\n            disabled={userType() === \"recruiter\"}\n          >\n            Click to contact\n          </button>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"50%\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextField\n            label=\"Write SOP (upto 250 words)\"\n            multiline\n            rows={8}\n            style={{ width: \"100%\", marginBottom: \"30px\" }}\n            variant=\"outlined\"\n            value={sop}\n            onChange={(event) => {\n              if (\n                event.target.value.split(\" \").filter(function (n) {\n                  return n != \"\";\n                }).length <= 250\n              ) {\n                setSop(event.target.value);\n              }\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => handleApply()}\n          >\n            Submit\n          </Button>\n   \n        </Paper>\n      </Modal>\n    \n    </div>\n    </div>\n    </div>\n    </div>\n\n\n\n <div class=\"w3-hide-large w3-hide-medium\">\n    <div class=\"box\">\n    <h2 class=\"mt-2 text-l leading-8 font-bold tracking-tight text-gray-900 sm:text-4xl py-2\">\n          {job.title}\n    </h2>\n    <hr></hr>\n    <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\n        \n  <p class=\"ml-3 leading-6  text-gray-700\">\n            Role : {job.jobType}</p>\n\n  <p class=\"ml-3 leading-6  text-gray-700\">\n            Salary : &#8377; {job.salary} per month</p>\n  \n  <p class=\"ml-3 leading-6  text-gray-700\">\n            Duration :{\" \"}\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\n          </p>\n <p class=\"ml-3 leading-6  text-gray-700\">\n            Posted By : {job.recruiter.name}</p>\n\n    <p class=\"ml-3 leading-6  text-gray-700\">\n            Application Deadline : {deadline}</p>\n  <p class=\"ml-3 leading-6  text-gray-700\">\n            address: {job.address}</p>\n  <p class=\"ml-2 leading-6  text-gray-700 py-3\">\n            {job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}</p>\n    \n    <button type=\"button\" class=\"py-2 px-28 text-white bg-indigo-800 hover:bg-indigo-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-16 text-center mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n            onClick={() => {\n              setOpen(true);\n            }}\n            disabled={userType() === \"recruiter\"}\n          >\n            Click to contact\n    </button>\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"50%\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextField\n            label=\"Details pla Name, Phone no, other\"\n            multiline\n            rows={8}\n            style={{ width: \"100%\", marginBottom: \"30px\" }}\n            variant=\"outlined\"\n            value={sop}\n            onChange={(event) => {\n              if (\n                event.target.value.split(\" \").filter(function (n) {\n                  return n != \"\";\n                }).length <= 250\n              ) {\n                setSop(event.target.value);\n              }\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => handleApply()}\n          >\n            Submit\n          </Button>\n   \n        </Paper>\n      </Modal>\n\n    </div>\n </div>\n    </>\n  );\n};\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <div class=\"\">\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n         \n\n\n\n\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Salary\n            </Grid>\n            <Grid item xs={9}>\n              <Slider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => {\n                  return value * (100000 / 100);\n                }}\n                marks={[\n                  { value: 0, label: \"0\" },\n                  { value: 100, label: \"100000\" },\n                ]}\n                value={searchOptions.salary}\n                onChange={(event, value) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    salary: value,\n                  })\n                }\n              />\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Duration\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                select\n                label=\"Duration\"\n                variant=\"outlined\"\n                fullWidth\n                value={searchOptions.duration}\n                onChange={(event) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    duration: event.target.value,\n                  })\n                }\n              >\n                <MenuItem value=\"0\">All</MenuItem>\n                <MenuItem value=\"1\">1</MenuItem>\n                <MenuItem value=\"2\">2</MenuItem>\n                <MenuItem value=\"3\">3</MenuItem>\n                <MenuItem value=\"4\">4</MenuItem>\n                <MenuItem value=\"5\">5</MenuItem>\n                <MenuItem value=\"6\">6</MenuItem>\n                <MenuItem value=\"7\">7</MenuItem>\n              </TextField>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"salary\"\n                    checked={searchOptions.sort.salary.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"salary\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"salary\">\n                    <Typography>Salary</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.salary.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            desc: !searchOptions.sort.salary.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.salary.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"duration\"\n                    checked={searchOptions.sort.duration.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"duration\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"duration\">\n                    <Typography>Duration</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.duration.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            desc: !searchOptions.sort.duration.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.duration.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort.rating.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.rating.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            desc: !searchOptions.sort.rating.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.rating.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n    </div>\n  );\n};\n\nconst Home = (props) => {\n  const [jobs, setJobs] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    query: \"\",\n    jobType: {\n      fullTime: false,\n      partTime: false,\n      wfh: false,\n    },\n    salary: [0, 100],\n    duration: \"0\",\n    sort: {\n      salary: {\n        status: false,\n        desc: false,\n      },\n      duration: {\n        status: false,\n        desc: false,\n      },\n      rating: {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n    if (searchOptions.query !== \"\") {\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\n    }\n    if (searchOptions.jobType.architect) {\n      searchParams = [...searchParams, `jobType=Architect`];\n    }\n    if (searchOptions.jobType.contractor) {\n      searchParams = [...searchParams, `jobType=Contractor`];\n    }\n    if (searchOptions.jobType.worker) {\n      searchParams = [...searchParams, `jobType=Worker`];\n    }\n\n    if (searchOptions.jobType.mistri) {\n      searchParams = [...searchParams, `jobType=Mistri`];\n    }\n    if (searchOptions.jobType.tool) {\n      searchParams = [...searchParams, `jobType=Tool`];\n    }\n    if (searchOptions.jobType.plumber) {\n      searchParams = [...searchParams, `jobType=Plumber`];\n    }\n    if (searchOptions.jobType.electrican) {\n      searchParams = [...searchParams, `jobType=Electrican`];\n    }\n\n    if (searchOptions.salary[0] != 0) {\n      searchParams = [\n        ...searchParams,\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\n      ];\n    }\n    if (searchOptions.salary[1] != 100) {\n      searchParams = [\n        ...searchParams,\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\n      ];\n    }\n    if (searchOptions.duration != \"0\") {\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = apiList.jobs;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setJobs(\n          response.data.filter((obj) => {\n            const today = new Date();\n            const deadline = new Date(obj.deadline);\n            return deadline > today;\n          })\n        );\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n \n  return (\n    <>\n  <div class=\"w3-hide-large w3-hide-medium\">\n    <div class=\"lg:text-center\">\n      <h2 class=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\"></h2>\n      <p class=\"mt-2  leading-8 bold tracking-tight text-gray-900 sm:text-l flex\">A better way to find On Services, On Demand \n       </p>\n    \n      <img class=\"block mx-auto h-10 w-40 rounded-full sm:mx-0 sm:shrink-0\" src=\"https://imgur.com/ux9PKcU.png\" alt=\"Woman's Face\"/>\n              \n    </div>\n</div>\n    <div class=\"\">\n\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs>\n          <div class=\"max-w-7xl mx-auto  py-2\">\n    <div class=\"lg:text-center w3-hide-small\">\n      <h2 class=\"text-base text-indigo-600 font-semibold tracking-wide uppercase\"></h2>\n      <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl flex\">A better way to find On Services, On Demand \n       </p>\n      \n\n      <img class=\"block mx-auto h-10 w-40 rounded-full sm:mx-0 sm:shrink-0\" src=\"https://imgur.com/ux9PKcU.png\" alt=\"Woman's Face\"/>\n              \n    </div>\n   \n  \n   </div>\n          </Grid>\n        \n          <div class=\"w3-hide-small\">\n          <Grid item xs>\n            <TextField\n              label=\"Search By Location\"\n              value={searchOptions.query}\n              onChange={(event) =>\n                setSearchOptions({\n                  ...searchOptions,\n                  query: event.target.value,\n                })\n              }\n              onKeyPress={(ev) => {\n                if (ev.key === \"Enter\") {\n                  getData();\n                }\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton onClick={() => getData()}>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              style={{ width: \"500px\" }}\n              variant=\"outlined\"\n            />\n          </Grid>\n\n          </div>\n\n\n\n\n        <div class=\"w3-hide-large w3-hide-medium\">\n        <TextField\n              label=\"Search By Location\"\n              value={searchOptions.query}\n              onChange={(event) =>\n                setSearchOptions({\n                  ...searchOptions,\n                  query: event.target.value,\n                })\n              }\n              onKeyPress={(ev) => {\n                if (ev.key === \"Enter\") {\n                  getData();\n                }\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton onClick={() => getData()}>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              style={{ width: \"300px\" }}\n              variant=\"outlined\"\n            />\n        </div>\n\n       \n \n          <Grid item>\n            <IconButton onClick={() => setFilterOpen(true)}>\n              <FilterListIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n       <div class=\"w3-hide-small\">\n<span class=\"py-2\"></span>\n         <div class=\"lg:text-center \">\n          <h2 class=\"text-base text-indigo-600 font-semibold tracking-wide uppercase  py-4\">Filter By categories </h2>\n         </div>\n         <span class=\"py-4\"></span>\n            <Grid\n              container\n              item\n              xs={12}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n             \n              <Grid item>\n\n\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/4fZdkbR.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"architect\"\n                      checked={searchOptions.jobType.architect}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Architect\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/zezzlRp.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"contractor\"\n                      checked={searchOptions.jobType.contractor}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Contractor\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/KsRkovX.png\"/>\n\n                   <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"worker\"\n                      checked={searchOptions.jobType.worker}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"worker\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/klb7vI6.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"mistri\"\n                      checked={searchOptions.jobType.mistri}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Mistri\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/GiIkYtC.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"tool\"\n                      checked={searchOptions.jobType.tool}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Tool\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/uyHLy3k.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"plumber\"\n                      checked={searchOptions.jobType.plumber}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Plumber\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/hVbpnFc.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"electrican\"\n                      checked={searchOptions.jobType.electrican}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Electrican\"\n                />\n              </Grid>\n            </Grid>\n        \n         \n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n              \n            >\n              Apply\n            </Button>\n            </div>\n\n\n\n      <div class=\"w3-hide-large w3-hide-medium\">\n\n         <div class=\"lg:text-center \">\n          <h2 class=\"text-base text-indigo-600 font-semibold tracking-wide uppercase  py-4\">Filter By categories </h2>\n         </div>\n            <Grid\n              container\n              item\n              xs={12}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n             \n              <Grid item>\n\n\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/4fZdkbR.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"architect\"\n                      checked={searchOptions.jobType.architect}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Architect\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/zezzlRp.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"contractor\"\n                      checked={searchOptions.jobType.contractor}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Contractor\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/KsRkovX.png\"/>\n\n                   <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"worker\"\n                      checked={searchOptions.jobType.worker}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"worker\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/klb7vI6.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"mistri\"\n                      checked={searchOptions.jobType.mistri}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Mistri\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/GiIkYtC.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"tool\"\n                      checked={searchOptions.jobType.tool}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Tool\"\n                />\n              </Grid>\n              <Grid item>\n              <img class=\"h-8 w-auto sm:h-10 px-5\" src=\"https://imgur.com/uyHLy3k.png\"/>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"plumber\"\n                      checked={searchOptions.jobType.plumber}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Plumber\"\n                />\n              </Grid>\n\n            </Grid>\n        \n          \n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n              \n            >\n              Apply\n            </Button>\n      </div> \n      \n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {jobs.length > 0 ? (\n            jobs.map((job) => {\n              return <JobTile job={job} />;\n            })\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No jobs found\n            </Typography>\n          )}\n        </Grid>\n        {/* <Grid item>\n          <Pagination count={10} color=\"primary\" />\n        </Grid> */}\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n      </div>\n\n    </>\n  );\n};\n\nexport default Home;\n","/home/abhi/goservices/stage2/job-portal/frontend/src/component/Logout.js",["624"],"/home/abhi/goservices/stage2/job-portal/frontend/src/component/recruiter/JobApplications.js",["625","626","627","628","629","630","631","632","633"],"/home/abhi/goservices/stage2/job-portal/frontend/src/component/recruiter/MyJobs.js",["634","635","636","637","638","639","640"],"/home/abhi/goservices/stage2/job-portal/frontend/src/component/recruiter/AcceptedApplicants.js",["641","642","643","644","645","646","647","648","649","650","651"],"/home/abhi/goservices/stage2/job-portal/frontend/src/component/recruiter/Profile.js",["652","653","654","655","656","657"],"/home/abhi/goservices/stage2/job-portal/frontend/src/component/recruiter/CreateJobs.js",["658","659","660","661"],"/home/abhi/goservices/stage2/job-portal/frontend/src/lib/isAuth.js",[],"/home/abhi/goservices/stage2/job-portal/frontend/src/component/Signup.js",["662","663","664","665","666","667","668","669","670","671","672","673","674","675","676"],"/home/abhi/goservices/stage2/job-portal/frontend/src/lib/MessagePopup.js",["677"],"/home/abhi/goservices/stage2/job-portal/frontend/src/lib/apiList.js",[],"/home/abhi/goservices/stage2/job-portal/frontend/src/lib/FileUploadInput.js",[],"/home/abhi/goservices/stage2/job-portal/frontend/src/lib/PasswordInput.js",[],"/home/abhi/goservices/stage2/job-portal/frontend/src/lib/EmailInput.js",[],"/home/abhi/goservices/stage2/job-portal/frontend/src/component/MobileHome.js",[],"/home/abhi/goservices/stage3/frontend/src/index.js",[],["678","679"],"/home/abhi/goservices/stage3/frontend/src/reportWebVitals.js",[],"/home/abhi/goservices/stage3/frontend/src/App.js",["680"],"/home/abhi/goservices/stage3/frontend/src/component/Login.js",["681","682","683"],"import React, { Component }  from 'react';\nimport { useContext, useState } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nimport Navbar from \"./Navbar\";\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"300px\",\n  },\n  submitButton: {\n    width: \"300px\",\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [loginDetails, setLoginDetails] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      error: false,\n      message: \"\",\n    },\n    password: {\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setLoginDetails({\n      ...loginDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\n      return inputErrorHandler[obj].error;\n    });\n    if (verified) {\n      axios\n        .post(apiList.login, loginDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n        setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      \n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n   <>\n  <div class=\"w3-hide-large w3-hide-medium\">\n  <div className=\"px-12 bg-white\">\n  <img class=\"py-2 h-48 w-full object-cover md:h-full md:w-60\" src=\"https://imgur.com/WChgHEL.gif\" alt=\"Man looking at item at a store\"/>\n        \n      <div className=\"\">\n      <div class=\"\">\n        <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Hello Again</p>\n      <p class=\"l text-gray-500 lg:mx-auto\">Please enter your details</p>\n       </div>\n        </div>\n        <div class=\"field\">\n        <EmailInput\n            label=\"Email\"\n            value={loginDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n          />\n</div>\n<div class=\"field\">\n  \n<PasswordInput\n            label=\"Password\"\n            value={loginDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n          />\n</div>\n\n<div class=\"field\">\n<Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleLogin()}\n            className={classes.submitButton}\n          >\n            Login\n          </Button>\n\n</div>\n\n\n\n\n\n\n        </div>\n        <div class =\"py-48 px-48\"></div>\n  </div>\n\n\n\n\n\n   <div class=\"w3-hide-small\">\n     <Navbar />\n  \n\n  <div class=\"py-24 bg-white\">\n  <div class=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n\n  <div class=\"grid grid-cols-2 gap-4\">\n  <div class=\"\">\n\n  <img class=\"h-48 w-full object-cover md:h-full md:w-60\" src=\"https://imgur.com/ztZzKBe.png\" alt=\"Man looking at item at a store\"/>\n         \n  </div>\n\n  <div>\n    <Paper elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n        <div class=\"\">\n        <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Hello Again</p>\n      <p class=\"l text-gray-500 lg:mx-auto\">Please enter your details</p>\n       </div>\n    </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={loginDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={loginDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleLogin()}\n            className={classes.submitButton}\n          >\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n    </div>\n</div>\n</div>\n</div>\n</div>\n    </>\n  );\n};\n\nexport default Login;\n","/home/abhi/goservices/stage3/frontend/src/component/Navbar.js",["684","685","686","687"],"/home/abhi/goservices/stage3/frontend/src/component/Logout.js",["688"],"/home/abhi/goservices/stage3/frontend/src/component/Welcome.js",["689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735"],"/home/abhi/goservices/stage3/frontend/src/component/Applications.js",["736","737","738","739","740","741","742","743","744","745"],"import React, { Component }  from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\n\nimport Navbar from './Navbar';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n  const [rating, setRating] = useState(application.job.rating);\n\n  const appliedOn = new Date(application.dateOfApplication);\n  const joinedOn = new Date(application.dateOfJoining);\n\n  const fetchRating = () => {\n    axios\n      .get(`${apiList.rating}?id=${application.job._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setRating(response.data.rating);\n        console.log(response.data);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const changeRating = () => {\n    axios\n      .put(\n        apiList.rating,\n        { rating: rating, jobId: application.job._id },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.data);\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: \"Rating updated successfully\",\n        });\n        fetchRating();\n        setOpen(false);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        fetchRating();\n        setOpen(false);\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n  return (\n    <>\n<div class =\"w3-hide-small\">\n   <Navbar />\n   </div>\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n          <p class=\"mt-2 text-xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">{application.job.title}</p>\n  \n          </Grid>\n          <span class=\"py-2\"></span>\n          <Grid item><b>Posted By:</b> {application.recruiter.name}</Grid>\n          <Grid item> <b>Role :</b> {application.job.jobType}</Grid>\n          <Grid item><b>Salary :</b> &#8377; {application.job.salary} per month</Grid>\n          <Grid item>\n          <b> Duration :{\" \"}</b>\n            {application.job.duration !== 0\n              ? `${application.job.duration} month`\n              : `Flexible`}\n          </Grid>\n          <Grid item>\n            {application.job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n          <Grid item><b>Applied On:</b> {appliedOn.toLocaleDateString()}</Grid>\n          {application.status === \"accepted\" ||\n          application.status === \"finished\" ? (\n            <Grid item><b>Joined On: </b>{joinedOn.toLocaleDateString()}</Grid>\n          ) : null}\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item xs>\n            <Paper\n              className={classes.statusBlock}\n              style={{\n                background: colorSet[application.status],\n                color: \"#ffffff\",\n              }}\n            >\n              {application.status}\n            </Paper>\n          </Grid>\n          {application.status === \"accepted\" ||\n          application.status === \"finished\" ? (\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.statusBlock}\n                onClick={() => {\n                  fetchRating();\n                  setOpen(true);\n                }}\n              >\n                Rate Job\n              </Button>\n            </Grid>\n          ) : null}\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Rating\n            name=\"simple-controlled\"\n            style={{ marginBottom: \"30px\" }}\n            value={rating === -1 ? null : rating}\n            onChange={(event, newValue) => {\n              setRating(newValue);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n    </>\n  );\n};\n\nconst Applications = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.applications, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <Grid\n      container\n      item\n      direction=\"column\"\n      alignItems=\"center\"\n      style={{ padding: \"\", minHeight: \"93vh\" }}\n    >\n      <Grid item>\n      <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Application</p>\n      <img class=\"block mx-auto h-10 w-40 rounded-full sm:mx-0 sm:shrink-0\" src=\"https://imgur.com/ux9PKcU.png\" alt=\"Woman's Face\"/>\n              \n      </Grid>\n      <Grid\n        container\n        item\n        xs\n        direction=\"column\"\n        style={{ width: \"100%\" }}\n        alignItems=\"stretch\"\n        justify=\"center\"\n      >\n        {applications.length > 0 ? (\n          applications.map((obj) => (\n            <Grid item>\n              <ApplicationTile application={obj} />\n            </Grid>\n          ))\n        ) : (\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n            No Applications Found\n          </Typography>\n        )}\n      </Grid>\n    </Grid>\n  \n  );\n};\n\nexport default Applications;\n","/home/abhi/goservices/stage3/frontend/src/component/Profile.js",["746","747","748","749","750","751","752","753","754","755","756"],"/home/abhi/goservices/stage3/frontend/src/component/Home.js",["757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784"],"/home/abhi/goservices/stage3/frontend/src/component/Signup.js",["785","786","787","788","789","790","791","792","793","794","795","796","797","798","799"],"import React, { Component }  from 'react';\nimport { useState, useContext } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nimport Navbar from \"./Navbar\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"400px\",\n  },\n  submitButton: {\n    width: \"400px\",\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n\n\n  return (\n    <>\n    \n      <Grid item>\n   \n      </Grid>\n    </>\n  );\n};\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [signupDetails, setSignupDetails] = useState({\n    type: \"applicant\",\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    skills: [],\n    bio: \"\",\n    gst: \"\",\n    address: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    password: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    name: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setSignupDetails({\n      ...signupDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        required: true,\n        untouched: false,\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n\n\n    let updatedDetails = {\n      ...signupDetails,\n   \n    };\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n \n    }\n  };\n\n  const handleLoginRecruiter = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    let updatedDetails = {\n      ...signupDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    console.log(updatedDetails);\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n   \n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <>\n\n<div class=\"w3-hide-large w3-hide-medium\">\n  <div className=\"px-12 bg-white\">\n  <img class=\"py-2 h-48 w-full object-cover md:h-full md:w-60\" src=\"https://imgur.com/s1TpQ6K.gif\" alt=\"Man looking at item at a store\"/>\n        \n      <div className=\"\">\n      <div class=\"\">\n      <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Hello Again</p>\n      <p class=\"l text-gray-500 lg:mx-auto\">Please enter your details</p>\n       </div>\n        </div>\n<div class=\"field\">\n<TextField\n            select\n            label=\"Category\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            value={signupDetails.type}\n            onChange={(event) => {\n              handleInput(\"type\", event.target.value);\n            }}\n          >\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n          </TextField>\n</div>\n<div class=\"field\">\n  \n<TextField\n            label=\"Name\"\n            value={signupDetails.name}\n            onChange={(event) => handleInput(\"name\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.name.error}\n            helperText={inputErrorHandler.name.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"name\", true, \"Name is required\");\n              } else {\n                handleInputError(\"name\", false, \"\");\n              }\n            }}\n            variant=\"outlined\"\n          />\n</div>\n\n<div class=\"field\">\n<EmailInput\n            label=\"Email\"\n            value={signupDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n            required={true}\n          />\n\n</div>\n\n<div class=\"field\">\n<PasswordInput\n            label=\"Password\"\n            value={signupDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.password.error}\n            helperText={inputErrorHandler.password.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"password\", true, \"Password is required\");\n              } else {\n                handleInputError(\"password\", false, \"\");\n              }\n            }}\n          />\n\n</div>\n{signupDetails.type === \"applicant\" ? (\n  <>\n  \n  <div class=\"field\">\n\n  <ChipInput\n                className={classes.inputBox}\n                label=\"Skills\"\n                variant=\"outlined\"\n                helperText=\"Press enter to add skills\"\n                onChange={(chips) =>\n                  setSignupDetails({ ...signupDetails, skills: chips })\n                }\n              />\n\n  </div>\n  </>\n) : (\n  <>\n   <div class=\"field\">\n \n <TextField\n                label=\"Bio (upto 250 words)\"\n                multiline\n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.bio}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 250\n                  ) {\n                    handleInput(\"bio\", event.target.value);\n                  }\n                }}\n              />\n    \n  </div>\n  <div class=\"field\">\n\n<TextField\n                label=\"GST or ADDHAR NUMBER \"\n              \n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.gst}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 16\n                  ) {\n                    handleInput(\"gst\", event.target.value);\n                  }\n                }}\n              />\n    \n</div>\n\n<div class=\"field\">\n<TextField\n                label=\"Full Address\"\n              \n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.address}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 16\n                  ) {\n                    handleInput(\"address\", event.target.value);\n                  }\n                }}\n              />\n\n    \n</div>\n<div class=\"field\">\n<PhoneInput\n                country={\"in\"}\n                value={phone}\n                onChange={(phone) => setPhone(phone)}\n              />\n  </div>\n\n\n  </>\n        )}\n  \n  <div class=\"field py-4\">\n  <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              signupDetails.type === \"applicant\"\n                ? handleLogin()\n                : handleLoginRecruiter();\n            }}\n            className={classes.submitButton}\n          >\n            Signup\n          </Button>\n  </div>\n  \n  \n  \n  \n\n\n\n        </div>\n        <div class =\"py-48 px-48\"></div>\n  </div>\n\n\n\n\n    <div class=\"w3-hide-small\">\n    <Navbar />\n     \n  <div class=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n    <div class=\"grid grid-cols-2 gap-4\">\n            <div class=\"...\">\n            <img class=\"h-48 w-full object-cover md:h-full md:w-70\" src=\"https://imgur.com/BqUrEXJ.png\" alt=\"Man looking at item at a store\"/>\n            </div>\n            <div class=\"...\">\n    <div elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n        <div class=\"\">\n        <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Hello Again</p>\n      <p class=\"l text-gray-500 lg:mx-auto\">Please enter your details</p>\n       </div>\n        </Grid>\n        <Grid item>\n          <TextField\n            select\n            label=\"Category\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            value={signupDetails.type}\n            onChange={(event) => {\n              handleInput(\"type\", event.target.value);\n            }}\n          >\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            label=\"Name\"\n            value={signupDetails.name}\n            onChange={(event) => handleInput(\"name\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.name.error}\n            helperText={inputErrorHandler.name.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"name\", true, \"Name is required\");\n              } else {\n                handleInputError(\"name\", false, \"\");\n              }\n            }}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={signupDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n            required={true}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={signupDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.password.error}\n            helperText={inputErrorHandler.password.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"password\", true, \"Password is required\");\n              } else {\n                handleInputError(\"password\", false, \"\");\n              }\n            }}\n          />\n        </Grid>\n        {signupDetails.type === \"applicant\" ? (\n          <>\n         \n            <Grid item>\n              <ChipInput\n                className={classes.inputBox}\n                label=\"Skills\"\n                variant=\"outlined\"\n                helperText=\"Press enter to add skills\"\n                onChange={(chips) =>\n                  setSignupDetails({ ...signupDetails, skills: chips })\n                }\n              />\n            </Grid>\n            <Grid item>\n      \n            </Grid>\n            <Grid item>\n       \n            </Grid>\n          </>\n        ) : (\n          <>\n            <Grid item style={{ width: \"100%\" }}>\n              <TextField\n                label=\"Bio (upto 250 words)\"\n                multiline\n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.bio}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 250\n                  ) {\n                    handleInput(\"bio\", event.target.value);\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item style={{ width: \"100%\" }}>\n              <TextField\n                label=\"GST or ADDHAR NUMBER \"\n              \n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.gst}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 16\n                  ) {\n                    handleInput(\"gst\", event.target.value);\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item style={{ width: \"100%\" }}>\n              <TextField\n                label=\"Full Address\"\n              \n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.address}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 16\n                  ) {\n                    handleInput(\"address\", event.target.value);\n                  }\n                }}\n              />\n            </Grid>\n\n\n\n\n            <Grid item>\n              <PhoneInput\n                country={\"in\"}\n                value={phone}\n                onChange={(phone) => setPhone(phone)}\n              />\n            </Grid>\n          \n          </>\n        )}\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              signupDetails.type === \"applicant\"\n                ? handleLogin()\n                : handleLoginRecruiter();\n            }}\n            className={classes.submitButton}\n          >\n            Signup\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n    </>\n  );\n};\n\nexport default Login;\n\n// {/* <Grid item>\n//           <PasswordInput\n//             label=\"Re-enter Password\"\n//             value={signupDetails.tmpPassword}\n//             onChange={(event) => handleInput(\"tmpPassword\", event.target.value)}\n//             className={classes.inputBox}\n//             labelWidth={140}\n//             helperText={inputErrorHandler.tmpPassword.message}\n//             error={inputErrorHandler.tmpPassword.error}\n//             onBlur={(event) => {\n//               if (event.target.value !== signupDetails.password) {\n//                 handleInputError(\n//                   \"tmpPassword\",\n//                   true,\n//                   \"Passwords are not same.\"\n//                 );\n//               }\n//             }}\n//           />\n//         </Grid> */}\n","/home/abhi/goservices/stage3/frontend/src/component/recruiter/MyJobs.js",["800","801","802","803","804","805","806"],"import React, { Component }  from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\n\nimport Navbar from \"../Navbar\"\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  button: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n}));\n\nconst JobTile = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const { job, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n\n  const [open, setOpen] = useState(false);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [jobDetails, setJobDetails] = useState(job);\n\n  console.log(jobDetails);\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleClick = (location) => {\n    history.push(location);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseUpdate = () => {\n    setOpenUpdate(false);\n  };\n\n  const handleDelete = () => {\n    console.log(job._id);\n    axios\n      .delete(`${apiList.jobs}/${job._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleClose();\n      });\n  };\n\n  const handleJobUpdate = () => {\n    axios\n      .put(`${apiList.jobs}/${job._id}`, jobDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n        handleCloseUpdate();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleCloseUpdate();\n      });\n  };\n\n  const postedOn = new Date(job.dateOfPosting);\n\n  return (\n  <>\n  <div class=\"w3-hide-small w3-hide-mideum\">\n  <Navbar />\n  </div>\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">{job.title}</Typography>\n          </Grid>\n          <Grid item>\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\n          </Grid>\n          <Grid item>Role : {job.jobType}</Grid>\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\n          <Grid item>\n            Duration :{\" \"}\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\n          </Grid>\n          <Grid item>Date Of Posting: {postedOn.toLocaleDateString()}</Grid>\n          <Grid item>Number of Applicants: {job.maxApplicants}</Grid>\n       \n          <Grid item>\n            {job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item xs>\n            <div class=\"w3-hide-small\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              onClick={() => handleClick(`/job/applications/${job._id}`)}\n            \n            >\n              View Applications\n            </Button>\n            </div>\n            <span class=\"w3-hide-large w3-hide-medium\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              onClick={() => handleClick(`/job/applications/${job._id}`)}\n              class=\"py-2 px-1\"\n              style={{\n                background: \"#0000FF\",\n                color: \"#fff\",\n              }}\n            >\n              View Application\n            </Button>\n            </span>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpenUpdate(true);\n              }}\n              style={{\n                background: \"#FC7A1E\",\n                color: \"#fff\",\n              }}\n            >\n              Update Details\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpen(true);\n              }}\n            >\n              Delete Job\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Are you sure?\n          </Typography>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleDelete()}\n              >\n                Delete\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleClose()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n      <Modal\n        open={openUpdate}\n        onClose={handleCloseUpdate}\n        className={classes.popupDialog}\n      >\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Update Details\n          </Typography>\n          <Grid\n            container\n            direction=\"column\"\n            spacing={3}\n            style={{ margin: \"10px\" }}\n          >\n            <Grid item>\n              <TextField\n                label=\"Application Deadline\"\n                type=\"datetime-local\"\n                value={jobDetails.deadline.substr(0, 16)}\n                onChange={(event) => {\n                  handleInput(\"deadline\", event.target.value);\n                }}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Maximum Number Of Applicants\"\n                type=\"number\"\n                variant=\"outlined\"\n                value={jobDetails.maxApplicants}\n                onChange={(event) => {\n                  handleInput(\"maxApplicants\", event.target.value);\n                }}\n                InputProps={{ inputProps: { min: 1 } }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Positions Available\"\n                type=\"number\"\n                variant=\"outlined\"\n                value={jobDetails.maxPositions}\n                onChange={(event) => {\n                  handleInput(\"maxPositions\", event.target.value);\n                }}\n                InputProps={{ inputProps: { min: 1 } }}\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleJobUpdate()}\n              >\n                Update\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleCloseUpdate()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n    </Paper>\n</>\n  );\n};\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Job Type\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"fullTime\"\n                      checked={searchOptions.jobType.fullTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Full Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"partTime\"\n                      checked={searchOptions.jobType.partTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Part Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"wfh\"\n                      checked={searchOptions.jobType.wfh}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Work From Home\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Salary\n            </Grid>\n            <Grid item xs={9}>\n              <Slider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => {\n                  return value * (100000 / 100);\n                }}\n                marks={[\n                  { value: 0, label: \"0\" },\n                  { value: 100, label: \"100000\" },\n                ]}\n                value={searchOptions.salary}\n                onChange={(event, value) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    salary: value,\n                  })\n                }\n              />\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Duration\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                select\n                label=\"Duration\"\n                variant=\"outlined\"\n                fullWidth\n                value={searchOptions.duration}\n                onChange={(event) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    duration: event.target.value,\n                  })\n                }\n              >\n                <MenuItem value=\"0\">All</MenuItem>\n                <MenuItem value=\"1\">1</MenuItem>\n                <MenuItem value=\"2\">2</MenuItem>\n                <MenuItem value=\"3\">3</MenuItem>\n                <MenuItem value=\"4\">4</MenuItem>\n                <MenuItem value=\"5\">5</MenuItem>\n                <MenuItem value=\"6\">6</MenuItem>\n                <MenuItem value=\"7\">7</MenuItem>\n              </TextField>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"salary\"\n                    checked={searchOptions.sort.salary.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"salary\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"salary\">\n                    <Typography>Salary</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.salary.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            desc: !searchOptions.sort.salary.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.salary.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"duration\"\n                    checked={searchOptions.sort.duration.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"duration\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"duration\">\n                    <Typography>Duration</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.duration.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            desc: !searchOptions.sort.duration.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.duration.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort.rating.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.rating.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            desc: !searchOptions.sort.rating.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.rating.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst MyJobs = (props) => {\n  const [jobs, setJobs] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    query: \"\",\n    jobType: {\n      fullTime: false,\n      partTime: false,\n      wfh: false,\n    },\n    salary: [0, 100],\n    duration: \"0\",\n    sort: {\n      salary: {\n        status: false,\n        desc: false,\n      },\n      duration: {\n        status: false,\n        desc: false,\n      },\n      rating: {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [`myjobs=1`];\n    if (searchOptions.query !== \"\") {\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\n    }\n    if (searchOptions.jobType.fullTime) {\n      searchParams = [...searchParams, `jobType=Full%20Time`];\n    }\n    if (searchOptions.jobType.partTime) {\n      searchParams = [...searchParams, `jobType=Part%20Time`];\n    }\n    if (searchOptions.jobType.wfh) {\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\n    }\n    if (searchOptions.salary[0] != 0) {\n      searchParams = [\n        ...searchParams,\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\n      ];\n    }\n    if (searchOptions.salary[1] != 100) {\n      searchParams = [\n        ...searchParams,\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\n      ];\n    }\n    if (searchOptions.duration != \"0\") {\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = apiList.jobs;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    console.log(address);\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setJobs(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs>\n          <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl py-4\">My jobs</p>\n     \n           \n          </Grid>\n          <Grid item xs>\n            <TextField\n              label=\"Search Jobs\"\n              value={searchOptions.query}\n              onChange={(event) =>\n                setSearchOptions({\n                  ...searchOptions,\n                  query: event.target.value,\n                })\n              }\n              onKeyPress={(ev) => {\n                if (ev.key === \"Enter\") {\n                  getData();\n                }\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton onClick={() => getData()}>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              style={{ width: \"500px\" }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item>\n            <IconButton onClick={() => setFilterOpen(true)}>\n              <FilterListIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {jobs.length > 0 ? (\n            jobs.map((job) => {\n              return <JobTile job={job} getData={getData} />;\n            })\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No jobs found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default MyJobs;\n","/home/abhi/goservices/stage3/frontend/src/component/recruiter/CreateJobs.js",["807","808","809","810","811","812"],"/home/abhi/goservices/stage3/frontend/src/component/recruiter/JobApplications.js",["813","814","815","816","817","818","819","820","821"],"import React, { Component }  from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n  Avatar,\n} from \"@material-ui/core\";\nimport Navbar from \"../Navbar\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList, { server } from \"../../lib/apiList\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Application Status\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"rejected\"\n                      checked={searchOptions.status.rejected}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Rejected\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"applied\"\n                      checked={searchOptions.status.applied}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Applied\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"shortlisted\"\n                      checked={searchOptions.status.shortlisted}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Shortlisted\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"name\"\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"name\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"name\">\n                    <Typography>Name</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"dateOfApplication\"\n                    checked={searchOptions.sort.dateOfApplication.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfApplication: {\n                            ...searchOptions.sort.dateOfApplication,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"dateOfApplication\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"dateOfApplication\">\n                    <Typography>Date of Application</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.dateOfApplication.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfApplication: {\n                            ...searchOptions.sort.dateOfApplication,\n                            desc: !searchOptions.sort.dateOfApplication.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.dateOfApplication.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\n                              .desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n\n  const appliedOn = new Date(application.dateOfApplication);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n  \n\n  const updateStatus = (status) => {\n    const address = `${apiList.applications}/${application._id}`;\n    const statusData = {\n      status: status,\n      dateOfJoining: new Date().toISOString(),\n    };\n    axios\n      .put(address, statusData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  const buttonSet = {\n    applied: (\n      <>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"shortlisted\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"shortlisted\")}\n          >\n            Shortlist\n          </Button>\n        </Grid>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"rejected\")}\n          >\n            Reject\n          </Button>\n        </Grid>\n      </>\n    ),\n    shortlisted: (\n      <>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"accepted\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"accepted\")}\n          >\n            Accept\n          </Button>\n        </Grid>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"rejected\")}\n          >\n            Reject\n          </Button>\n        </Grid>\n      </>\n    ),\n    rejected: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Rejected\n          </Paper>\n        </Grid>\n      </>\n    ),\n    accepted: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"accepted\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Accepted\n          </Paper>\n        </Grid>\n      </>\n    ),\n    cancelled: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"cancelled\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Cancelled\n          </Paper>\n        </Grid>\n      </>\n    ),\n    finished: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"finished\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Finished\n          </Paper>\n        </Grid>\n      </>\n    ),\n  };\n\n  return (\n    <>\n    <Navbar />\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid\n          item\n          xs={2}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar\n            src={`${server}${application.jobApplicant.profile}`}\n            className={classes.avatar}\n          />\n        </Grid>\n        <Grid container item xs={7} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">\n              {application.jobApplicant.name}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Rating\n              value={\n                application.jobApplicant.rating !== -1\n                  ? application.jobApplicant.rating\n                  : null\n              }\n              readOnly\n            />\n          </Grid>\n          <Grid item>Applied: {appliedOn.toLocaleDateString()}</Grid>\n        \n          <Grid item>\n            Detail: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\n          </Grid>\n          <Grid item>\n            {application.jobApplicant.skills.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n   \n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            // onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n    </>\n  );\n};\n\nconst JobApplications = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const { jobId } = useParams();\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    status: {\n      all: false,\n      applied: false,\n      shortlisted: false,\n    },\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false,\n      },\n      dateOfApplication: {\n        status: true,\n        desc: true,\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n\n    if (searchOptions.status.rejected) {\n      searchParams = [...searchParams, `status=rejected`];\n    }\n    if (searchOptions.status.applied) {\n      searchParams = [...searchParams, `status=applied`];\n    }\n    if (searchOptions.status.shortlisted) {\n      searchParams = [...searchParams, `status=shortlisted`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = `${apiList.applicants}?jobId=${jobId}`;\n    if (queryString !== \"\") {\n      address = `${address}&${queryString}`;\n    }\n\n    console.log(address);\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // console.log(err.response.data);\n        setApplications([]);\n    \n      });\n  };\n\n  return (\n    <>\n    <div class=\"w3-hide-small\">\n    <Navbar />\n    </div>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n        <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Application</p>\n         \n        </Grid>\n        <Grid item>\n          <IconButton onClick={() => setFilterOpen(true)}>\n            <FilterListIcon />\n          </IconButton>\n        </Grid>\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          style={{ width: \"100%\" }}\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {applications.length > 0 ? (\n            applications.map((obj) => (\n              <Grid item>\n                {/* {console.log(obj)} */}\n                <ApplicationTile application={obj} getData={getData} />\n              </Grid>\n            ))\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No Applications Found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default JobApplications;\n","/home/abhi/goservices/stage3/frontend/src/lib/MessagePopup.js",["822"],"/home/abhi/goservices/stage3/frontend/src/component/recruiter/AcceptedApplicants.js",["823","824","825","826","827","828","829","830","831","832","833"],"import React, { Component }  from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n  Avatar,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport Navbar from \"../Navbar\";\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList, { server } from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          {/* <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Application Status\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"rejected\"\n                      checked={searchOptions.status.rejected}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Rejected\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"applied\"\n                      checked={searchOptions.status.applied}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Applied\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"shortlisted\"\n                      checked={searchOptions.status.shortlisted}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Shortlisted\"\n                />\n              </Grid>\n            </Grid>\n          </Grid> */}\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"name\"\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"name\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"name\">\n                    <Typography>Name</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"jobTitle\"\n                    checked={searchOptions.sort[\"job.title\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"job.title\": {\n                            ...searchOptions.sort[\"job.title\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"jobTitle\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"jobTitle\">\n                    <Typography>Job Title</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"job.title\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"job.title\": {\n                            ...searchOptions.sort[\"job.title\"],\n                            desc: !searchOptions.sort[\"job.title\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"job.title\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"dateOfJoining\"\n                    checked={searchOptions.sort.dateOfJoining.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfJoining: {\n                            ...searchOptions.sort.dateOfJoining,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"dateOfJoining\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"dateOfJoining\">\n                    <Typography>Date of Joining</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.dateOfJoining.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfJoining: {\n                            ...searchOptions.sort.dateOfJoining,\n                            desc: !searchOptions.sort.dateOfJoining.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.dateOfJoining.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\n                              .desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n  const [openEndJob, setOpenEndJob] = useState(false);\n  const [rating, setRating] = useState(application.jobApplicant.rating);\n\n  const appliedOn = new Date(application.dateOfApplication);\n\n  const changeRating = () => {\n    axios\n      .put(\n        apiList.rating,\n        { rating: rating, applicantId: application.jobApplicant.userId },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.data);\n       \n       \n      \n        // fetchRating();\n        getData();\n        setOpen(false);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err);\n   \n        // fetchRating();\n        getData();\n        setOpen(false);\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseEndJob = () => {\n    setOpenEndJob(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n\n\n  const updateStatus = (status) => {\n    const address = `${apiList.applications}/${application._id}`;\n    const statusData = {\n      status: status,\n      dateOfJoining: new Date().toISOString(),\n    };\n    axios\n      .put(address, statusData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        handleCloseEndJob();\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n        handleCloseEndJob();\n      });\n  };\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid\n          item\n          xs={2}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar\n            src={`${server}${application.jobApplicant.profile}`}\n            className={classes.avatar}\n          />\n        </Grid>\n        <Grid container item xs={7} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">\n              {application.jobApplicant.name}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Rating\n              value={\n                application.jobApplicant.rating !== -1\n                  ? application.jobApplicant.rating\n                  : null\n              }\n              readOnly\n            />\n          </Grid>\n          <Grid item>Job Title: {application.job.title}</Grid>\n          <Grid item>Role: {application.job.jobType}</Grid>\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\n          <Grid item>\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\n          </Grid>\n          <Grid item>\n            {application.jobApplicant.skills.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n      \n          <Grid item container xs>\n            {/* {buttonSet[application.status]} */}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              style={{\n                background: \"#09BC8A\",\n              }}\n              onClick={() => {\n                setOpenEndJob(true);\n              }}\n            >\n              End Job\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpen(true);\n              }}\n            >\n              Rate Applicant\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Rating\n            name=\"simple-controlled\"\n            style={{ marginBottom: \"30px\" }}\n            value={rating === -1 ? null : rating}\n            onChange={(event, newValue) => {\n              setRating(newValue);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n      <Modal\n        open={openEndJob}\n        onClose={handleCloseEndJob}\n        className={classes.popupDialog}\n      >\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Are you sure?\n          </Typography>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => {\n                  updateStatus(\"finished\");\n                }}\n              >\n                Yes\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleCloseEndJob()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst AcceptedApplicants = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false,\n      },\n      \"job.title\": {\n        status: false,\n        desc: false,\n      },\n      dateOfJoining: {\n        status: true,\n        desc: true,\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n    searchParams = [...searchParams, `status=accepted`];\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = `${apiList.applicants}`;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    console.log(address);\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // console.log(err.response.data);\n        setApplications([]);\n\n      });\n  };\n\n  return (\n    <>\n    <div class=\"w3-hide-small\">\n    <Navbar /></div>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n    <div class=\"lg:text-center\">\n      <p class=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">Employees</p>\n    </div>\n    </div>\n        </Grid>\n        <Grid item>\n          <IconButton onClick={() => setFilterOpen(true)}>\n            <FilterListIcon />\n          </IconButton>\n        </Grid>\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          style={{ width: \"100%\" }}\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {applications.length > 0 ? (\n            applications.map((obj) => (\n              <Grid item>\n                {/* {console.log(obj)} */}\n                <ApplicationTile application={obj} getData={getData} />\n              </Grid>\n            ))\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No Applications Found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default AcceptedApplicants;","/home/abhi/goservices/stage3/frontend/src/component/recruiter/Profile.js",["834","835","836","837","838","839"],"import React, { Component }  from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nimport Navbar from \"../Navbar\"\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    bio: \"\",\n    address: \"\",\n    contactNumber: \"\",\n    address:\"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        setPhone(response.data.contactNumber);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const handleUpdate = () => {\n    let updatedDetails = {\n      ...profileDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n      \n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n    <div class=\"w3-hide-small w3-hide-medium\">\n    <Navbar />\n    </div>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n    <div class=\"lg:text-center\">\n      <p class=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">Employees</p>\n    </div>\n    </div>\n        </Grid>\n        <Grid item xs style={{ width: \"100%\" }}>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              //   width: \"60%\",\n            }}\n          >\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                  style={{ width: \"100%\" }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"address\"\n                  value={profileDetails.address}\n                  onChange={(event) => handleInput(\"address\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                  style={{ width: \"100%\" }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Bio (upto 250 words)\"\n                  multiline\n                  rows={8}\n                  style={{ width: \"100%\" }}\n                  variant=\"outlined\"\n                  value={profileDetails.bio}\n                  onChange={(event) => {\n                    if (\n                      event.target.value.split(\" \").filter(function (n) {\n                        return n != \"\";\n                      }).length <= 250\n                    ) {\n                      handleInput(\"bio\", event.target.value);\n                    }\n                  }}\n                />\n              </Grid>\n              <Grid\n                item\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <PhoneInput\n                  country={\"in\"}\n                  value={phone}\n                  onChange={(phone) => setPhone(phone)}\n                  style={{ width: \"auto\" }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n","/home/abhi/goservices/stage3/frontend/src/lib/isAuth.js",[],"/home/abhi/goservices/stage3/frontend/src/lib/EmailInput.js",[],"/home/abhi/goservices/stage3/frontend/src/lib/PasswordInput.js",[],"/home/abhi/goservices/stage3/frontend/src/lib/apiList.js",[],"/home/abhi/goservices/stage3/frontend/src/lib/FileUploadInput.js",[],"/home/abhi/goservices/stage3/frontend/src/component/MobileHome.js",[],"/home/abhi/goservices/stage4/server/client/src/index.js",[],"/home/abhi/goservices/stage4/server/client/src/reportWebVitals.js",[],"/home/abhi/goservices/stage4/server/client/src/App.js",["840"],"/home/abhi/goservices/stage4/server/client/src/component/Login.js",["841","842","843"],"/home/abhi/goservices/stage4/server/client/src/component/Logout.js",["844"],"/home/abhi/goservices/stage4/server/client/src/component/Signup.js",["845","846","847","848","849","850","851","852","853","854","855","856","857","858","859"],"/home/abhi/goservices/stage4/server/client/src/component/Navbar.js",["860","861","862","863"],"/home/abhi/goservices/stage4/server/client/src/component/recruiter/CreateJobs.js",["864","865","866","867","868","869"],"/home/abhi/goservices/stage4/server/client/src/component/Welcome.js",["870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916"],"/home/abhi/goservices/stage4/server/client/src/component/recruiter/JobApplications.js",["917","918","919","920","921","922","923","924","925"],"/home/abhi/goservices/stage4/server/client/src/component/Applications.js",["926","927","928","929","930","931","932","933","934","935"],"/home/abhi/goservices/stage4/server/client/src/component/Profile.js",["936","937","938","939","940","941","942","943","944","945","946"],"/home/abhi/goservices/stage4/server/client/src/component/recruiter/MyJobs.js",["947","948","949","950","951","952","953"],"/home/abhi/goservices/stage4/server/client/src/component/Home.js",["954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981"],"/home/abhi/goservices/stage4/server/client/src/lib/isAuth.js",[],"/home/abhi/goservices/stage4/server/client/src/lib/MessagePopup.js",["982"],"/home/abhi/goservices/stage4/server/client/src/component/recruiter/Profile.js",["983","984","985","986","987","988"],"/home/abhi/goservices/stage4/server/client/src/component/recruiter/AcceptedApplicants.js",["989","990","991","992","993","994","995","996","997","998","999"],"/home/abhi/goservices/stage4/server/client/src/lib/EmailInput.js",[],"/home/abhi/goservices/stage4/server/client/src/lib/PasswordInput.js",[],"/home/abhi/goservices/stage4/server/client/src/lib/apiList.js",[],"/home/abhi/goservices/stage4/server/client/src/lib/FileUploadInput.js",[],"/home/abhi/goservices/stage4/server/client/src/component/MobileHome.js",[],{"ruleId":"1000","replacedBy":"1001"},{"ruleId":"1002","replacedBy":"1003"},{"ruleId":"1004","severity":1,"message":"1005","line":21,"column":8,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":10,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1009","line":1,"column":16,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1010","severity":1,"message":"1011","line":55,"column":8,"nodeType":"1012","endLine":55,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":59,"column":8,"nodeType":"1012","endLine":59,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":63,"column":8,"nodeType":"1012","endLine":63,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":67,"column":8,"nodeType":"1012","endLine":67,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":72,"column":8,"nodeType":"1012","endLine":72,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":76,"column":8,"nodeType":"1012","endLine":76,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":79,"column":8,"nodeType":"1012","endLine":79,"endColumn":86},{"ruleId":"1013","severity":1,"message":"1014","line":106,"column":5,"nodeType":"1012","endLine":106,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":110,"column":9,"nodeType":"1012","endLine":110,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":123,"column":5,"nodeType":"1012","endLine":123,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":127,"column":9,"nodeType":"1012","endLine":127,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":140,"column":5,"nodeType":"1012","endLine":140,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":144,"column":9,"nodeType":"1012","endLine":144,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":157,"column":5,"nodeType":"1012","endLine":157,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":161,"column":9,"nodeType":"1012","endLine":161,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":179,"column":5,"nodeType":"1012","endLine":179,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":183,"column":9,"nodeType":"1012","endLine":183,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":195,"column":5,"nodeType":"1012","endLine":195,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":199,"column":9,"nodeType":"1012","endLine":199,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":212,"column":5,"nodeType":"1012","endLine":212,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":216,"column":9,"nodeType":"1012","endLine":216,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":229,"column":5,"nodeType":"1012","endLine":229,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":233,"column":9,"nodeType":"1012","endLine":233,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":246,"column":5,"nodeType":"1012","endLine":246,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":250,"column":9,"nodeType":"1012","endLine":250,"endColumn":21},{"ruleId":"1015","severity":1,"message":"1016","line":16,"column":6,"nodeType":"1017","endLine":16,"endColumn":8,"suggestions":"1018"},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1020","line":6,"column":5,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":11},{"ruleId":"1010","severity":1,"message":"1011","line":42,"column":11,"nodeType":"1012","endLine":42,"endColumn":80},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1021","line":5,"column":3,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1009","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1009","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1022","line":9,"column":3,"nodeType":"1006","messageId":"1007","endLine":9,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1023","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1024","line":16,"column":8,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1025","line":17,"column":8,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1026","line":23,"column":8,"nodeType":"1006","messageId":"1007","endLine":23,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1027","line":44,"column":7,"nodeType":"1006","messageId":"1007","endLine":44,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1028","line":45,"column":9,"nodeType":"1006","messageId":"1007","endLine":45,"endColumn":16},{"ruleId":"1029","severity":1,"message":"1030","line":357,"column":32,"nodeType":"1031","messageId":"1032","endLine":357,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":376,"column":32,"nodeType":"1031","messageId":"1032","endLine":376,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":395,"column":32,"nodeType":"1031","messageId":"1032","endLine":395,"endColumn":34},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1034","line":21,"column":8,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":18},{"ruleId":"1029","severity":1,"message":"1030","line":201,"column":28,"nodeType":"1031","messageId":"1032","endLine":201,"endColumn":30},{"ruleId":"1015","severity":1,"message":"1035","line":521,"column":6,"nodeType":"1017","endLine":521,"endColumn":8,"suggestions":"1036"},{"ruleId":"1029","severity":1,"message":"1030","line":551,"column":33,"nodeType":"1031","messageId":"1032","endLine":551,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":557,"column":33,"nodeType":"1031","messageId":"1032","endLine":557,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":563,"column":32,"nodeType":"1031","messageId":"1032","endLine":563,"endColumn":34},{"ruleId":"1004","severity":1,"message":"1037","line":613,"column":9,"nodeType":"1006","messageId":"1007","endLine":613,"endColumn":17},{"ruleId":"1038","severity":1,"message":"1039","line":640,"column":7,"nodeType":"1012","endLine":640,"endColumn":83},{"ruleId":"1010","severity":1,"message":"1011","line":701,"column":15,"nodeType":"1012","endLine":701,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":723,"column":15,"nodeType":"1012","endLine":723,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":745,"column":15,"nodeType":"1012","endLine":745,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":767,"column":15,"nodeType":"1012","endLine":767,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":789,"column":15,"nodeType":"1012","endLine":789,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":811,"column":15,"nodeType":"1012","endLine":811,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":833,"column":15,"nodeType":"1012","endLine":833,"endColumn":89},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1040","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1041","line":8,"column":3,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1021","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1042","line":14,"column":3,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1043","line":15,"column":3,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1044","line":17,"column":3,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1045","line":18,"column":3,"nodeType":"1006","messageId":"1007","endLine":18,"endColumn":11},{"ruleId":"1015","severity":1,"message":"1035","line":241,"column":6,"nodeType":"1017","endLine":241,"endColumn":8,"suggestions":"1046"},{"ruleId":"1004","severity":1,"message":"1047","line":6,"column":3,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1026","line":13,"column":8,"nodeType":"1006","messageId":"1007","endLine":13,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1024","line":14,"column":8,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1025","line":15,"column":8,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1027","line":34,"column":7,"nodeType":"1006","messageId":"1007","endLine":34,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1048","line":109,"column":10,"nodeType":"1006","messageId":"1007","endLine":109,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1049","line":109,"column":20,"nodeType":"1006","messageId":"1007","endLine":109,"endColumn":31},{"ruleId":"1004","severity":1,"message":"1050","line":110,"column":10,"nodeType":"1006","messageId":"1007","endLine":110,"endColumn":14},{"ruleId":"1015","severity":1,"message":"1035","line":136,"column":6,"nodeType":"1017","endLine":136,"endColumn":8,"suggestions":"1051"},{"ruleId":"1004","severity":1,"message":"1052","line":168,"column":9,"nodeType":"1006","messageId":"1007","endLine":168,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1053","line":172,"column":9,"nodeType":"1006","messageId":"1007","endLine":172,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1054","line":2,"column":22,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":31},{"ruleId":"1004","severity":1,"message":"1009","line":6,"column":3,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1047","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1041","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1021","line":10,"column":3,"nodeType":"1006","messageId":"1007","endLine":10,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1042","line":13,"column":3,"nodeType":"1006","messageId":"1007","endLine":13,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1033","line":15,"column":3,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1044","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":11},{"ruleId":"1015","severity":1,"message":"1035","line":668,"column":6,"nodeType":"1017","endLine":668,"endColumn":8,"suggestions":"1055"},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1041","line":8,"column":3,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1021","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1042","line":14,"column":3,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1043","line":15,"column":3,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1044","line":17,"column":3,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1056","line":21,"column":10,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1057","line":445,"column":9,"nodeType":"1006","messageId":"1007","endLine":445,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1058","line":646,"column":9,"nodeType":"1006","messageId":"1007","endLine":646,"endColumn":17},{"ruleId":"1015","severity":1,"message":"1035","line":672,"column":6,"nodeType":"1017","endLine":672,"endColumn":8,"suggestions":"1059"},{"ruleId":"1004","severity":1,"message":"1047","line":6,"column":3,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":8},{"ruleId":"1015","severity":1,"message":"1035","line":53,"column":6,"nodeType":"1017","endLine":53,"endColumn":8,"suggestions":"1060"},{"ruleId":"1029","severity":1,"message":"1030","line":164,"column":34,"nodeType":"1031","messageId":"1032","endLine":164,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1034","line":22,"column":8,"nodeType":"1006","messageId":"1007","endLine":22,"endColumn":18},{"ruleId":"1015","severity":1,"message":"1035","line":718,"column":6,"nodeType":"1017","endLine":718,"endColumn":8,"suggestions":"1061"},{"ruleId":"1029","severity":1,"message":"1030","line":734,"column":33,"nodeType":"1031","messageId":"1032","endLine":734,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":740,"column":33,"nodeType":"1031","messageId":"1032","endLine":740,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":746,"column":32,"nodeType":"1031","messageId":"1032","endLine":746,"endColumn":34},{"ruleId":"1004","severity":1,"message":"1062","line":1,"column":20,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1000","replacedBy":"1063"},{"ruleId":"1002","replacedBy":"1064"},{"ruleId":"1000","replacedBy":"1065"},{"ruleId":"1002","replacedBy":"1066"},{"ruleId":"1004","severity":1,"message":"1005","line":21,"column":8,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1020","line":6,"column":5,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":11},{"ruleId":"1010","severity":1,"message":"1011","line":45,"column":11,"nodeType":"1012","endLine":45,"endColumn":80},{"ruleId":"1010","severity":1,"message":"1011","line":208,"column":3,"nodeType":"1012","endLine":208,"endColumn":72},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1040","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1041","line":8,"column":3,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1021","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1042","line":14,"column":3,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1043","line":15,"column":3,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1044","line":17,"column":3,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1045","line":18,"column":3,"nodeType":"1006","messageId":"1007","endLine":18,"endColumn":11},{"ruleId":"1015","severity":1,"message":"1035","line":241,"column":6,"nodeType":"1017","endLine":241,"endColumn":8,"suggestions":"1067"},{"ruleId":"1004","severity":1,"message":"1047","line":6,"column":3,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1026","line":13,"column":8,"nodeType":"1006","messageId":"1007","endLine":13,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1024","line":14,"column":8,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1025","line":15,"column":8,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1027","line":34,"column":7,"nodeType":"1006","messageId":"1007","endLine":34,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1048","line":109,"column":10,"nodeType":"1006","messageId":"1007","endLine":109,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1049","line":109,"column":20,"nodeType":"1006","messageId":"1007","endLine":109,"endColumn":31},{"ruleId":"1004","severity":1,"message":"1050","line":110,"column":10,"nodeType":"1006","messageId":"1007","endLine":110,"endColumn":14},{"ruleId":"1015","severity":1,"message":"1035","line":136,"column":6,"nodeType":"1017","endLine":136,"endColumn":8,"suggestions":"1068"},{"ruleId":"1004","severity":1,"message":"1052","line":168,"column":9,"nodeType":"1006","messageId":"1007","endLine":168,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1053","line":172,"column":9,"nodeType":"1006","messageId":"1007","endLine":172,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1021","line":5,"column":3,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1009","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":10,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1009","line":1,"column":16,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1010","severity":1,"message":"1011","line":54,"column":6,"nodeType":"1012","endLine":54,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":58,"column":6,"nodeType":"1012","endLine":58,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":62,"column":6,"nodeType":"1012","endLine":62,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":66,"column":6,"nodeType":"1012","endLine":66,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":71,"column":6,"nodeType":"1012","endLine":71,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":75,"column":6,"nodeType":"1012","endLine":75,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":78,"column":6,"nodeType":"1012","endLine":78,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":120,"column":8,"nodeType":"1012","endLine":120,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":124,"column":8,"nodeType":"1012","endLine":124,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":128,"column":8,"nodeType":"1012","endLine":128,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":132,"column":8,"nodeType":"1012","endLine":132,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":137,"column":8,"nodeType":"1012","endLine":137,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":141,"column":8,"nodeType":"1012","endLine":141,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":144,"column":8,"nodeType":"1012","endLine":144,"endColumn":86},{"ruleId":"1013","severity":1,"message":"1014","line":169,"column":5,"nodeType":"1012","endLine":169,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":173,"column":9,"nodeType":"1012","endLine":173,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":185,"column":5,"nodeType":"1012","endLine":185,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":189,"column":9,"nodeType":"1012","endLine":189,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":203,"column":5,"nodeType":"1012","endLine":203,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":207,"column":9,"nodeType":"1012","endLine":207,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":224,"column":5,"nodeType":"1012","endLine":224,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":228,"column":9,"nodeType":"1012","endLine":228,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":240,"column":5,"nodeType":"1012","endLine":240,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":244,"column":9,"nodeType":"1012","endLine":244,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":256,"column":5,"nodeType":"1012","endLine":256,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":260,"column":9,"nodeType":"1012","endLine":260,"endColumn":21},{"ruleId":"1069","severity":1,"message":"1070","line":282,"column":16,"nodeType":"1012","endLine":282,"endColumn":86},{"ruleId":"1013","severity":1,"message":"1014","line":302,"column":5,"nodeType":"1012","endLine":302,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":306,"column":9,"nodeType":"1012","endLine":306,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":319,"column":5,"nodeType":"1012","endLine":319,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":323,"column":9,"nodeType":"1012","endLine":323,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":336,"column":5,"nodeType":"1012","endLine":336,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":340,"column":9,"nodeType":"1012","endLine":340,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":353,"column":5,"nodeType":"1012","endLine":353,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":357,"column":9,"nodeType":"1012","endLine":357,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":375,"column":5,"nodeType":"1012","endLine":375,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":379,"column":9,"nodeType":"1012","endLine":379,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":391,"column":5,"nodeType":"1012","endLine":391,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":395,"column":9,"nodeType":"1012","endLine":395,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":408,"column":5,"nodeType":"1012","endLine":408,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":412,"column":9,"nodeType":"1012","endLine":412,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":425,"column":5,"nodeType":"1012","endLine":425,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":429,"column":9,"nodeType":"1012","endLine":429,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":442,"column":5,"nodeType":"1012","endLine":442,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":446,"column":9,"nodeType":"1012","endLine":446,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1034","line":21,"column":8,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1071","line":28,"column":8,"nodeType":"1006","messageId":"1007","endLine":28,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1072","line":31,"column":10,"nodeType":"1006","messageId":"1007","endLine":31,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1073","line":37,"column":9,"nodeType":"1006","messageId":"1007","endLine":37,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1037","line":118,"column":9,"nodeType":"1006","messageId":"1007","endLine":118,"endColumn":17},{"ruleId":"1029","severity":1,"message":"1030","line":213,"column":28,"nodeType":"1031","messageId":"1032","endLine":213,"endColumn":30},{"ruleId":"1029","severity":1,"message":"1030","line":299,"column":28,"nodeType":"1031","messageId":"1032","endLine":299,"endColumn":30},{"ruleId":"1015","severity":1,"message":"1035","line":620,"column":6,"nodeType":"1017","endLine":620,"endColumn":8,"suggestions":"1074"},{"ruleId":"1029","severity":1,"message":"1030","line":650,"column":33,"nodeType":"1031","messageId":"1032","endLine":650,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":656,"column":33,"nodeType":"1031","messageId":"1032","endLine":656,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":662,"column":32,"nodeType":"1031","messageId":"1032","endLine":662,"endColumn":34},{"ruleId":"1038","severity":1,"message":"1039","line":717,"column":7,"nodeType":"1012","endLine":717,"endColumn":83},{"ruleId":"1038","severity":1,"message":"1039","line":744,"column":7,"nodeType":"1012","endLine":744,"endColumn":83},{"ruleId":"1010","severity":1,"message":"1011","line":846,"column":15,"nodeType":"1012","endLine":846,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":868,"column":15,"nodeType":"1012","endLine":868,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":890,"column":15,"nodeType":"1012","endLine":890,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":912,"column":15,"nodeType":"1012","endLine":912,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":934,"column":15,"nodeType":"1012","endLine":934,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":956,"column":15,"nodeType":"1012","endLine":956,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":978,"column":15,"nodeType":"1012","endLine":978,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1031,"column":15,"nodeType":"1012","endLine":1031,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1053,"column":15,"nodeType":"1012","endLine":1053,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1075,"column":15,"nodeType":"1012","endLine":1075,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1097,"column":15,"nodeType":"1012","endLine":1097,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1119,"column":15,"nodeType":"1012","endLine":1119,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1141,"column":15,"nodeType":"1012","endLine":1141,"endColumn":89},{"ruleId":"1015","severity":1,"message":"1016","line":16,"column":6,"nodeType":"1017","endLine":16,"endColumn":8,"suggestions":"1075"},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1041","line":8,"column":3,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1021","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1042","line":14,"column":3,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1044","line":17,"column":3,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1076","line":398,"column":9,"nodeType":"1006","messageId":"1007","endLine":398,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1058","line":593,"column":9,"nodeType":"1006","messageId":"1007","endLine":593,"endColumn":17},{"ruleId":"1015","severity":1,"message":"1035","line":621,"column":6,"nodeType":"1017","endLine":621,"endColumn":8,"suggestions":"1077"},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1034","line":22,"column":8,"nodeType":"1006","messageId":"1007","endLine":22,"endColumn":18},{"ruleId":"1015","severity":1,"message":"1035","line":738,"column":6,"nodeType":"1017","endLine":738,"endColumn":8,"suggestions":"1078"},{"ruleId":"1029","severity":1,"message":"1030","line":754,"column":33,"nodeType":"1031","messageId":"1032","endLine":754,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":760,"column":33,"nodeType":"1031","messageId":"1032","endLine":760,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":766,"column":32,"nodeType":"1031","messageId":"1032","endLine":766,"endColumn":34},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1041","line":8,"column":3,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1021","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1042","line":14,"column":3,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1043","line":15,"column":3,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1044","line":17,"column":3,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1056","line":21,"column":10,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1057","line":445,"column":9,"nodeType":"1006","messageId":"1007","endLine":445,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1058","line":646,"column":9,"nodeType":"1006","messageId":"1007","endLine":646,"endColumn":17},{"ruleId":"1015","severity":1,"message":"1035","line":672,"column":6,"nodeType":"1017","endLine":672,"endColumn":8,"suggestions":"1079"},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1009","line":6,"column":3,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1047","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":8},{"ruleId":"1080","severity":1,"message":"1081","line":46,"column":5,"nodeType":"1082","messageId":"1032","endLine":46,"endColumn":12},{"ruleId":"1015","severity":1,"message":"1035","line":60,"column":6,"nodeType":"1017","endLine":60,"endColumn":8,"suggestions":"1083"},{"ruleId":"1029","severity":1,"message":"1030","line":185,"column":34,"nodeType":"1031","messageId":"1032","endLine":185,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1054","line":2,"column":22,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":31},{"ruleId":"1004","severity":1,"message":"1009","line":6,"column":3,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1047","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1009","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1022","line":9,"column":3,"nodeType":"1006","messageId":"1007","endLine":9,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1023","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1024","line":16,"column":8,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1025","line":17,"column":8,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1026","line":23,"column":8,"nodeType":"1006","messageId":"1007","endLine":23,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1027","line":44,"column":7,"nodeType":"1006","messageId":"1007","endLine":44,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1028","line":45,"column":9,"nodeType":"1006","messageId":"1007","endLine":45,"endColumn":16},{"ruleId":"1029","severity":1,"message":"1030","line":354,"column":32,"nodeType":"1031","messageId":"1032","endLine":354,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":375,"column":32,"nodeType":"1031","messageId":"1032","endLine":375,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":396,"column":32,"nodeType":"1031","messageId":"1032","endLine":396,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":558,"column":32,"nodeType":"1031","messageId":"1032","endLine":558,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":577,"column":32,"nodeType":"1031","messageId":"1032","endLine":577,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":596,"column":32,"nodeType":"1031","messageId":"1032","endLine":596,"endColumn":34},{"ruleId":"1004","severity":1,"message":"1062","line":1,"column":20,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1000","replacedBy":"1084"},{"ruleId":"1002","replacedBy":"1085"},{"ruleId":"1004","severity":1,"message":"1005","line":21,"column":8,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1021","line":5,"column":3,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1009","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1020","line":6,"column":5,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":11},{"ruleId":"1010","severity":1,"message":"1011","line":45,"column":11,"nodeType":"1012","endLine":45,"endColumn":80},{"ruleId":"1010","severity":1,"message":"1011","line":208,"column":3,"nodeType":"1012","endLine":208,"endColumn":72},{"ruleId":"1015","severity":1,"message":"1016","line":16,"column":6,"nodeType":"1017","endLine":16,"endColumn":8,"suggestions":"1086"},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":10,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1009","line":1,"column":16,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1010","severity":1,"message":"1011","line":54,"column":6,"nodeType":"1012","endLine":54,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":58,"column":6,"nodeType":"1012","endLine":58,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":62,"column":6,"nodeType":"1012","endLine":62,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":66,"column":6,"nodeType":"1012","endLine":66,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":71,"column":6,"nodeType":"1012","endLine":71,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":75,"column":6,"nodeType":"1012","endLine":75,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":78,"column":6,"nodeType":"1012","endLine":78,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":120,"column":8,"nodeType":"1012","endLine":120,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":124,"column":8,"nodeType":"1012","endLine":124,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":128,"column":8,"nodeType":"1012","endLine":128,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":132,"column":8,"nodeType":"1012","endLine":132,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":137,"column":8,"nodeType":"1012","endLine":137,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":141,"column":8,"nodeType":"1012","endLine":141,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":144,"column":8,"nodeType":"1012","endLine":144,"endColumn":86},{"ruleId":"1013","severity":1,"message":"1014","line":169,"column":5,"nodeType":"1012","endLine":169,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":173,"column":9,"nodeType":"1012","endLine":173,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":185,"column":5,"nodeType":"1012","endLine":185,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":189,"column":9,"nodeType":"1012","endLine":189,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":203,"column":5,"nodeType":"1012","endLine":203,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":207,"column":9,"nodeType":"1012","endLine":207,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":224,"column":5,"nodeType":"1012","endLine":224,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":228,"column":9,"nodeType":"1012","endLine":228,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":240,"column":5,"nodeType":"1012","endLine":240,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":244,"column":9,"nodeType":"1012","endLine":244,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":256,"column":5,"nodeType":"1012","endLine":256,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":260,"column":9,"nodeType":"1012","endLine":260,"endColumn":21},{"ruleId":"1069","severity":1,"message":"1070","line":282,"column":16,"nodeType":"1012","endLine":282,"endColumn":86},{"ruleId":"1013","severity":1,"message":"1014","line":302,"column":5,"nodeType":"1012","endLine":302,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":306,"column":9,"nodeType":"1012","endLine":306,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":319,"column":5,"nodeType":"1012","endLine":319,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":323,"column":9,"nodeType":"1012","endLine":323,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":336,"column":5,"nodeType":"1012","endLine":336,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":340,"column":9,"nodeType":"1012","endLine":340,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":353,"column":5,"nodeType":"1012","endLine":353,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":357,"column":9,"nodeType":"1012","endLine":357,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":375,"column":5,"nodeType":"1012","endLine":375,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":379,"column":9,"nodeType":"1012","endLine":379,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":391,"column":5,"nodeType":"1012","endLine":391,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":395,"column":9,"nodeType":"1012","endLine":395,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":408,"column":5,"nodeType":"1012","endLine":408,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":412,"column":9,"nodeType":"1012","endLine":412,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":425,"column":5,"nodeType":"1012","endLine":425,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":429,"column":9,"nodeType":"1012","endLine":429,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":442,"column":5,"nodeType":"1012","endLine":442,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":446,"column":9,"nodeType":"1012","endLine":446,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1040","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1041","line":8,"column":3,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1021","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1042","line":14,"column":3,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1043","line":15,"column":3,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1044","line":17,"column":3,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1045","line":18,"column":3,"nodeType":"1006","messageId":"1007","endLine":18,"endColumn":11},{"ruleId":"1015","severity":1,"message":"1035","line":241,"column":6,"nodeType":"1017","endLine":241,"endColumn":8,"suggestions":"1087"},{"ruleId":"1004","severity":1,"message":"1047","line":6,"column":3,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1026","line":13,"column":8,"nodeType":"1006","messageId":"1007","endLine":13,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1024","line":14,"column":8,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1025","line":15,"column":8,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1027","line":34,"column":7,"nodeType":"1006","messageId":"1007","endLine":34,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1048","line":109,"column":10,"nodeType":"1006","messageId":"1007","endLine":109,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1049","line":109,"column":20,"nodeType":"1006","messageId":"1007","endLine":109,"endColumn":31},{"ruleId":"1004","severity":1,"message":"1050","line":110,"column":10,"nodeType":"1006","messageId":"1007","endLine":110,"endColumn":14},{"ruleId":"1015","severity":1,"message":"1035","line":136,"column":6,"nodeType":"1017","endLine":136,"endColumn":8,"suggestions":"1088"},{"ruleId":"1004","severity":1,"message":"1052","line":168,"column":9,"nodeType":"1006","messageId":"1007","endLine":168,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1053","line":172,"column":9,"nodeType":"1006","messageId":"1007","endLine":172,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1034","line":21,"column":8,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1071","line":28,"column":8,"nodeType":"1006","messageId":"1007","endLine":28,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1072","line":31,"column":10,"nodeType":"1006","messageId":"1007","endLine":31,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1073","line":37,"column":9,"nodeType":"1006","messageId":"1007","endLine":37,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1037","line":118,"column":9,"nodeType":"1006","messageId":"1007","endLine":118,"endColumn":17},{"ruleId":"1029","severity":1,"message":"1030","line":213,"column":28,"nodeType":"1031","messageId":"1032","endLine":213,"endColumn":30},{"ruleId":"1029","severity":1,"message":"1030","line":299,"column":28,"nodeType":"1031","messageId":"1032","endLine":299,"endColumn":30},{"ruleId":"1015","severity":1,"message":"1035","line":620,"column":6,"nodeType":"1017","endLine":620,"endColumn":8,"suggestions":"1089"},{"ruleId":"1029","severity":1,"message":"1030","line":650,"column":33,"nodeType":"1031","messageId":"1032","endLine":650,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":656,"column":33,"nodeType":"1031","messageId":"1032","endLine":656,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":662,"column":32,"nodeType":"1031","messageId":"1032","endLine":662,"endColumn":34},{"ruleId":"1038","severity":1,"message":"1039","line":717,"column":7,"nodeType":"1012","endLine":717,"endColumn":83},{"ruleId":"1038","severity":1,"message":"1039","line":744,"column":7,"nodeType":"1012","endLine":744,"endColumn":83},{"ruleId":"1010","severity":1,"message":"1011","line":846,"column":15,"nodeType":"1012","endLine":846,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":868,"column":15,"nodeType":"1012","endLine":868,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":890,"column":15,"nodeType":"1012","endLine":890,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":912,"column":15,"nodeType":"1012","endLine":912,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":934,"column":15,"nodeType":"1012","endLine":934,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":956,"column":15,"nodeType":"1012","endLine":956,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":978,"column":15,"nodeType":"1012","endLine":978,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1031,"column":15,"nodeType":"1012","endLine":1031,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1053,"column":15,"nodeType":"1012","endLine":1053,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1075,"column":15,"nodeType":"1012","endLine":1075,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1097,"column":15,"nodeType":"1012","endLine":1097,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1119,"column":15,"nodeType":"1012","endLine":1119,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1141,"column":15,"nodeType":"1012","endLine":1141,"endColumn":89},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1009","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1022","line":9,"column":3,"nodeType":"1006","messageId":"1007","endLine":9,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1023","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1024","line":16,"column":8,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1025","line":17,"column":8,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1026","line":23,"column":8,"nodeType":"1006","messageId":"1007","endLine":23,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1027","line":44,"column":7,"nodeType":"1006","messageId":"1007","endLine":44,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1028","line":45,"column":9,"nodeType":"1006","messageId":"1007","endLine":45,"endColumn":16},{"ruleId":"1029","severity":1,"message":"1030","line":354,"column":32,"nodeType":"1031","messageId":"1032","endLine":354,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":375,"column":32,"nodeType":"1031","messageId":"1032","endLine":375,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":396,"column":32,"nodeType":"1031","messageId":"1032","endLine":396,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":558,"column":32,"nodeType":"1031","messageId":"1032","endLine":558,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":577,"column":32,"nodeType":"1031","messageId":"1032","endLine":577,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":596,"column":32,"nodeType":"1031","messageId":"1032","endLine":596,"endColumn":34},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1034","line":22,"column":8,"nodeType":"1006","messageId":"1007","endLine":22,"endColumn":18},{"ruleId":"1015","severity":1,"message":"1035","line":738,"column":6,"nodeType":"1017","endLine":738,"endColumn":8,"suggestions":"1090"},{"ruleId":"1029","severity":1,"message":"1030","line":754,"column":33,"nodeType":"1031","messageId":"1032","endLine":754,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":760,"column":33,"nodeType":"1031","messageId":"1032","endLine":760,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":766,"column":32,"nodeType":"1031","messageId":"1032","endLine":766,"endColumn":34},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1054","line":2,"column":22,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":31},{"ruleId":"1004","severity":1,"message":"1009","line":6,"column":3,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1047","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1091","line":21,"column":10,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1092","line":22,"column":10,"nodeType":"1006","messageId":"1007","endLine":22,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1041","line":8,"column":3,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1021","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1042","line":14,"column":3,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1044","line":17,"column":3,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1076","line":398,"column":9,"nodeType":"1006","messageId":"1007","endLine":398,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1058","line":593,"column":9,"nodeType":"1006","messageId":"1007","endLine":593,"endColumn":17},{"ruleId":"1015","severity":1,"message":"1035","line":621,"column":6,"nodeType":"1017","endLine":621,"endColumn":8,"suggestions":"1093"},{"ruleId":"1004","severity":1,"message":"1062","line":1,"column":20,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1041","line":8,"column":3,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1021","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1042","line":14,"column":3,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1043","line":15,"column":3,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1044","line":17,"column":3,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1056","line":21,"column":10,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1057","line":445,"column":9,"nodeType":"1006","messageId":"1007","endLine":445,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1058","line":646,"column":9,"nodeType":"1006","messageId":"1007","endLine":646,"endColumn":17},{"ruleId":"1015","severity":1,"message":"1035","line":672,"column":6,"nodeType":"1017","endLine":672,"endColumn":8,"suggestions":"1094"},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1009","line":6,"column":3,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1047","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":8},{"ruleId":"1080","severity":1,"message":"1081","line":46,"column":5,"nodeType":"1082","messageId":"1032","endLine":46,"endColumn":12},{"ruleId":"1015","severity":1,"message":"1035","line":60,"column":6,"nodeType":"1017","endLine":60,"endColumn":8,"suggestions":"1095"},{"ruleId":"1029","severity":1,"message":"1030","line":185,"column":34,"nodeType":"1031","messageId":"1032","endLine":185,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1005","line":21,"column":8,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1021","line":5,"column":3,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1009","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":13},{"ruleId":"1015","severity":1,"message":"1016","line":16,"column":6,"nodeType":"1017","endLine":16,"endColumn":8,"suggestions":"1096"},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1009","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1022","line":9,"column":3,"nodeType":"1006","messageId":"1007","endLine":9,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1023","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1024","line":16,"column":8,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1025","line":17,"column":8,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1026","line":23,"column":8,"nodeType":"1006","messageId":"1007","endLine":23,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1027","line":44,"column":7,"nodeType":"1006","messageId":"1007","endLine":44,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1028","line":45,"column":9,"nodeType":"1006","messageId":"1007","endLine":45,"endColumn":16},{"ruleId":"1029","severity":1,"message":"1030","line":354,"column":32,"nodeType":"1031","messageId":"1032","endLine":354,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":375,"column":32,"nodeType":"1031","messageId":"1032","endLine":375,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":396,"column":32,"nodeType":"1031","messageId":"1032","endLine":396,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":558,"column":32,"nodeType":"1031","messageId":"1032","endLine":558,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":577,"column":32,"nodeType":"1031","messageId":"1032","endLine":577,"endColumn":34},{"ruleId":"1029","severity":1,"message":"1030","line":596,"column":32,"nodeType":"1031","messageId":"1032","endLine":596,"endColumn":34},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1020","line":6,"column":5,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":11},{"ruleId":"1010","severity":1,"message":"1011","line":45,"column":11,"nodeType":"1012","endLine":45,"endColumn":80},{"ruleId":"1010","severity":1,"message":"1011","line":208,"column":3,"nodeType":"1012","endLine":208,"endColumn":72},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1054","line":2,"column":22,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":31},{"ruleId":"1004","severity":1,"message":"1009","line":6,"column":3,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1047","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1091","line":21,"column":10,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1092","line":22,"column":10,"nodeType":"1006","messageId":"1007","endLine":22,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":10,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1009","line":1,"column":16,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1010","severity":1,"message":"1011","line":54,"column":6,"nodeType":"1012","endLine":54,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":58,"column":6,"nodeType":"1012","endLine":58,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":62,"column":6,"nodeType":"1012","endLine":62,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":66,"column":6,"nodeType":"1012","endLine":66,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":71,"column":6,"nodeType":"1012","endLine":71,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":75,"column":6,"nodeType":"1012","endLine":75,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":78,"column":6,"nodeType":"1012","endLine":78,"endColumn":84},{"ruleId":"1010","severity":1,"message":"1011","line":120,"column":8,"nodeType":"1012","endLine":120,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":124,"column":8,"nodeType":"1012","endLine":124,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":128,"column":8,"nodeType":"1012","endLine":128,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":132,"column":8,"nodeType":"1012","endLine":132,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":137,"column":8,"nodeType":"1012","endLine":137,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":141,"column":8,"nodeType":"1012","endLine":141,"endColumn":86},{"ruleId":"1010","severity":1,"message":"1011","line":144,"column":8,"nodeType":"1012","endLine":144,"endColumn":86},{"ruleId":"1013","severity":1,"message":"1014","line":169,"column":5,"nodeType":"1012","endLine":169,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":173,"column":9,"nodeType":"1012","endLine":173,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":185,"column":5,"nodeType":"1012","endLine":185,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":189,"column":9,"nodeType":"1012","endLine":189,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":203,"column":5,"nodeType":"1012","endLine":203,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":207,"column":9,"nodeType":"1012","endLine":207,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":224,"column":5,"nodeType":"1012","endLine":224,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":228,"column":9,"nodeType":"1012","endLine":228,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":240,"column":5,"nodeType":"1012","endLine":240,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":244,"column":9,"nodeType":"1012","endLine":244,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":256,"column":5,"nodeType":"1012","endLine":256,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":260,"column":9,"nodeType":"1012","endLine":260,"endColumn":21},{"ruleId":"1069","severity":1,"message":"1070","line":282,"column":16,"nodeType":"1012","endLine":282,"endColumn":86},{"ruleId":"1013","severity":1,"message":"1014","line":302,"column":5,"nodeType":"1012","endLine":302,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":306,"column":9,"nodeType":"1012","endLine":306,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":319,"column":5,"nodeType":"1012","endLine":319,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":323,"column":9,"nodeType":"1012","endLine":323,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":336,"column":5,"nodeType":"1012","endLine":336,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":340,"column":9,"nodeType":"1012","endLine":340,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":353,"column":5,"nodeType":"1012","endLine":353,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":357,"column":9,"nodeType":"1012","endLine":357,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":375,"column":5,"nodeType":"1012","endLine":375,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":379,"column":9,"nodeType":"1012","endLine":379,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":391,"column":5,"nodeType":"1012","endLine":391,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":395,"column":9,"nodeType":"1012","endLine":395,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":408,"column":5,"nodeType":"1012","endLine":408,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":412,"column":9,"nodeType":"1012","endLine":412,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":425,"column":5,"nodeType":"1012","endLine":425,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":429,"column":9,"nodeType":"1012","endLine":429,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1014","line":442,"column":5,"nodeType":"1012","endLine":442,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1014","line":446,"column":9,"nodeType":"1012","endLine":446,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1041","line":8,"column":3,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1021","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1042","line":14,"column":3,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1044","line":17,"column":3,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1076","line":398,"column":9,"nodeType":"1006","messageId":"1007","endLine":398,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1058","line":593,"column":9,"nodeType":"1006","messageId":"1007","endLine":593,"endColumn":17},{"ruleId":"1015","severity":1,"message":"1035","line":621,"column":6,"nodeType":"1017","endLine":621,"endColumn":8,"suggestions":"1097"},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1040","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1041","line":8,"column":3,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1021","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1042","line":14,"column":3,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1043","line":15,"column":3,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1044","line":17,"column":3,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1045","line":18,"column":3,"nodeType":"1006","messageId":"1007","endLine":18,"endColumn":11},{"ruleId":"1015","severity":1,"message":"1035","line":241,"column":6,"nodeType":"1017","endLine":241,"endColumn":8,"suggestions":"1098"},{"ruleId":"1004","severity":1,"message":"1047","line":6,"column":3,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1026","line":13,"column":8,"nodeType":"1006","messageId":"1007","endLine":13,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1024","line":14,"column":8,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1025","line":15,"column":8,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1027","line":34,"column":7,"nodeType":"1006","messageId":"1007","endLine":34,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1048","line":109,"column":10,"nodeType":"1006","messageId":"1007","endLine":109,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1049","line":109,"column":20,"nodeType":"1006","messageId":"1007","endLine":109,"endColumn":31},{"ruleId":"1004","severity":1,"message":"1050","line":110,"column":10,"nodeType":"1006","messageId":"1007","endLine":110,"endColumn":14},{"ruleId":"1015","severity":1,"message":"1035","line":136,"column":6,"nodeType":"1017","endLine":136,"endColumn":8,"suggestions":"1099"},{"ruleId":"1004","severity":1,"message":"1052","line":168,"column":9,"nodeType":"1006","messageId":"1007","endLine":168,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1053","line":172,"column":9,"nodeType":"1006","messageId":"1007","endLine":172,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1034","line":22,"column":8,"nodeType":"1006","messageId":"1007","endLine":22,"endColumn":18},{"ruleId":"1015","severity":1,"message":"1035","line":738,"column":6,"nodeType":"1017","endLine":738,"endColumn":8,"suggestions":"1100"},{"ruleId":"1029","severity":1,"message":"1030","line":754,"column":33,"nodeType":"1031","messageId":"1032","endLine":754,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":760,"column":33,"nodeType":"1031","messageId":"1032","endLine":760,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":766,"column":32,"nodeType":"1031","messageId":"1032","endLine":766,"endColumn":34},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1034","line":21,"column":8,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1071","line":28,"column":8,"nodeType":"1006","messageId":"1007","endLine":28,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1072","line":31,"column":10,"nodeType":"1006","messageId":"1007","endLine":31,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1073","line":37,"column":9,"nodeType":"1006","messageId":"1007","endLine":37,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1037","line":118,"column":9,"nodeType":"1006","messageId":"1007","endLine":118,"endColumn":17},{"ruleId":"1029","severity":1,"message":"1030","line":213,"column":28,"nodeType":"1031","messageId":"1032","endLine":213,"endColumn":30},{"ruleId":"1029","severity":1,"message":"1030","line":299,"column":28,"nodeType":"1031","messageId":"1032","endLine":299,"endColumn":30},{"ruleId":"1015","severity":1,"message":"1035","line":620,"column":6,"nodeType":"1017","endLine":620,"endColumn":8,"suggestions":"1101"},{"ruleId":"1029","severity":1,"message":"1030","line":650,"column":33,"nodeType":"1031","messageId":"1032","endLine":650,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":656,"column":33,"nodeType":"1031","messageId":"1032","endLine":656,"endColumn":35},{"ruleId":"1029","severity":1,"message":"1030","line":662,"column":32,"nodeType":"1031","messageId":"1032","endLine":662,"endColumn":34},{"ruleId":"1038","severity":1,"message":"1039","line":717,"column":7,"nodeType":"1012","endLine":717,"endColumn":83},{"ruleId":"1038","severity":1,"message":"1039","line":744,"column":7,"nodeType":"1012","endLine":744,"endColumn":83},{"ruleId":"1010","severity":1,"message":"1011","line":846,"column":15,"nodeType":"1012","endLine":846,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":868,"column":15,"nodeType":"1012","endLine":868,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":890,"column":15,"nodeType":"1012","endLine":890,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":912,"column":15,"nodeType":"1012","endLine":912,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":934,"column":15,"nodeType":"1012","endLine":934,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":956,"column":15,"nodeType":"1012","endLine":956,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":978,"column":15,"nodeType":"1012","endLine":978,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1031,"column":15,"nodeType":"1012","endLine":1031,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1053,"column":15,"nodeType":"1012","endLine":1053,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1075,"column":15,"nodeType":"1012","endLine":1075,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1097,"column":15,"nodeType":"1012","endLine":1097,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1119,"column":15,"nodeType":"1012","endLine":1119,"endColumn":89},{"ruleId":"1010","severity":1,"message":"1011","line":1141,"column":15,"nodeType":"1012","endLine":1141,"endColumn":89},{"ruleId":"1004","severity":1,"message":"1062","line":1,"column":20,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1009","line":6,"column":3,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1047","line":7,"column":3,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":8},{"ruleId":"1080","severity":1,"message":"1081","line":46,"column":5,"nodeType":"1082","messageId":"1032","endLine":46,"endColumn":12},{"ruleId":"1015","severity":1,"message":"1035","line":60,"column":6,"nodeType":"1017","endLine":60,"endColumn":8,"suggestions":"1102"},{"ruleId":"1029","severity":1,"message":"1030","line":185,"column":34,"nodeType":"1031","messageId":"1032","endLine":185,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1019","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1041","line":8,"column":3,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1021","line":11,"column":3,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1042","line":14,"column":3,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1043","line":15,"column":3,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1033","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1044","line":17,"column":3,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1056","line":21,"column":10,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1057","line":445,"column":9,"nodeType":"1006","messageId":"1007","endLine":445,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1058","line":646,"column":9,"nodeType":"1006","messageId":"1007","endLine":646,"endColumn":17},{"ruleId":"1015","severity":1,"message":"1035","line":672,"column":6,"nodeType":"1017","endLine":672,"endColumn":8,"suggestions":"1103"},"no-native-reassign",["1104"],"no-negated-in-lhs",["1105"],"no-unused-vars","'isAuth' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPopup'. Either include it or remove the dependency array.","ArrayExpression",["1106"],"'Component' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Paper' is defined but never used.","'Input' is defined but never used.","'DescriptionIcon' is defined but never used.","'FaceIcon' is defined but never used.","'FileUploadInput' is defined but never used.","'MultifieldInput' is assigned a value but never used.","'classes' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'FormGroup' is defined but never used.","'Pagination' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["1107"],"'settings' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'Slider' is defined but never used.","'FormControlLabel' is defined but never used.","'MenuItem' is defined but never used.","'Checkbox' is defined but never used.",["1108"],"'Modal' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'open' is assigned a value but never used.",["1109"],"'handleClose' is assigned a value but never used.","'editDetails' is assigned a value but never used.","'useEffect' is defined but never used.",["1110"],"'useParams' is defined but never used.","'colorSet' is assigned a value but never used.","'setPopup' is assigned a value but never used.",["1111"],["1112"],["1113"],"'Slide' is defined but never used.",["1104"],["1105"],["1104"],["1105"],["1114"],["1115"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Navbar' is defined but never used.","'Carousel' is defined but never used.","'AutoPlay' is defined but never used.",["1116"],["1117"],"'buttonSet' is assigned a value but never used.",["1118"],["1119"],["1120"],"no-dupe-keys","Duplicate key 'address'.","ObjectExpression",["1121"],["1104"],["1105"],["1122"],["1123"],["1124"],["1125"],["1126"],"'FaCheck' is defined but never used.","'FaBullhorn' is defined but never used.",["1127"],["1128"],["1129"],["1130"],["1131"],["1132"],["1133"],["1134"],["1135"],["1136"],["1137"],"no-global-assign","no-unsafe-negation",{"desc":"1138","fix":"1139"},{"desc":"1140","fix":"1141"},{"desc":"1140","fix":"1142"},{"desc":"1140","fix":"1143"},{"desc":"1140","fix":"1144"},{"desc":"1140","fix":"1145"},{"desc":"1140","fix":"1146"},{"desc":"1140","fix":"1147"},{"desc":"1140","fix":"1148"},{"desc":"1140","fix":"1149"},{"desc":"1140","fix":"1150"},{"desc":"1138","fix":"1151"},{"desc":"1140","fix":"1152"},{"desc":"1140","fix":"1153"},{"desc":"1140","fix":"1154"},{"desc":"1140","fix":"1155"},{"desc":"1138","fix":"1156"},{"desc":"1140","fix":"1157"},{"desc":"1140","fix":"1158"},{"desc":"1140","fix":"1159"},{"desc":"1140","fix":"1160"},{"desc":"1140","fix":"1161"},{"desc":"1140","fix":"1162"},{"desc":"1140","fix":"1163"},{"desc":"1138","fix":"1164"},{"desc":"1140","fix":"1165"},{"desc":"1140","fix":"1166"},{"desc":"1140","fix":"1167"},{"desc":"1140","fix":"1168"},{"desc":"1140","fix":"1169"},{"desc":"1140","fix":"1170"},{"desc":"1140","fix":"1171"},"Update the dependencies array to be: [setPopup]",{"range":"1172","text":"1173"},"Update the dependencies array to be: [getData]",{"range":"1174","text":"1175"},{"range":"1176","text":"1175"},{"range":"1177","text":"1175"},{"range":"1178","text":"1175"},{"range":"1179","text":"1175"},{"range":"1180","text":"1175"},{"range":"1181","text":"1175"},{"range":"1182","text":"1175"},{"range":"1183","text":"1175"},{"range":"1184","text":"1175"},{"range":"1185","text":"1173"},{"range":"1186","text":"1175"},{"range":"1187","text":"1175"},{"range":"1188","text":"1175"},{"range":"1189","text":"1175"},{"range":"1190","text":"1173"},{"range":"1191","text":"1175"},{"range":"1192","text":"1175"},{"range":"1193","text":"1175"},{"range":"1194","text":"1175"},{"range":"1195","text":"1175"},{"range":"1196","text":"1175"},{"range":"1197","text":"1175"},{"range":"1198","text":"1173"},{"range":"1199","text":"1175"},{"range":"1200","text":"1175"},{"range":"1201","text":"1175"},{"range":"1202","text":"1175"},{"range":"1203","text":"1175"},{"range":"1204","text":"1175"},{"range":"1205","text":"1175"},[422,424],"[setPopup]",[15509,15511],"[getData]",[6189,6191],[3372,3374],[19293,19295],[20436,20438],[1039,1041],[21416,21418],[6268,6270],[3372,3374],[18581,18583],[422,424],[17792,17794],[22031,22033],[20435,20437],[1149,1151],[422,424],[6268,6270],[3372,3374],[18581,18583],[22031,22033],[17792,17794],[20435,20437],[1149,1151],[422,424],[17792,17794],[6268,6270],[3372,3374],[22031,22033],[18581,18583],[1149,1151],[20435,20437]]